{"version":3,"sources":["webpack:///webpack/bootstrap 935c7ea233f889ba2d43","webpack:///./src/videocontext.js","webpack:///./src/SourceNodes/videonode.js","webpack:///./src/SourceNodes/sourcenode.js","webpack:///./src/utils.js","webpack:///./src/graphnode.js","webpack:///./src/SourceNodes/imagenode.js","webpack:///./src/SourceNodes/canvasnode.js","webpack:///./src/ProcessingNodes/compositingnode.js","webpack:///./src/ProcessingNodes/processingnode.js","webpack:///./src/exceptions.js","webpack:///./src/DestinationNode/destinationnode.js","webpack:///./src/ProcessingNodes/effectnode.js","webpack:///./src/ProcessingNodes/transitionnode.js","webpack:///./src/rendergraph.js"],"names":[],"mappings":"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","file":"videocontext.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 935c7ea233f889ba2d43\n **/","//Matthew Shotton, R&D User Experience,© BBC 2015\n\nimport VideoNode from \"./SourceNodes/videonode.js\";\nimport ImageNode from \"./SourceNodes/imagenode.js\";\nimport CanvasNode from \"./SourceNodes/canvasnode.js\";\nimport { SOURCENODESTATE } from \"./SourceNodes/sourcenode.js\";\nimport CompositingNode from \"./ProcessingNodes/compositingnode.js\";\nimport DestinationNode from \"./DestinationNode/destinationnode.js\";\nimport EffectNode from \"./ProcessingNodes/effectnode.js\";\nimport TransitionNode from \"./ProcessingNodes/transitionnode.js\";\nimport RenderGraph from \"./rendergraph.js\";\nimport { createSigmaGraphDataFromRenderGraph, visualiseVideoContextTimeline, visualiseVideoContextGraph, createControlFormForNode, UpdateablesManager } from \"./utils.js\";\n\n\nlet updateablesManager = new UpdateablesManager();\n\nexport default class VideoContext{\n    /**\n    * Initialise the VideoContext and render to the specific canvas. A 2nd parameter can be passed to the constructor which is a function that get's called if the VideoContext fails to initialise.\n    *\n    * @example\n    * var canvasElement = document.getElemenyById(\"canvas\");\n    * var ctx = new VideoContext(canvasElement, function(){console.error(\"Sorry, your browser dosen\\'t support WebGL\");});\n    * var videoNode = ctx.createVideoSourceNode(\"video.mp4\");\n    * videoNode.connect(ctx.destination);\n    * videoNode.start(0);\n    * videoNode.stop(10);\n    * ctx.play();\n    *\n    */\n    constructor(canvas, initErrorCallback, options={\"preserveDrawingBuffer\":true, \"manualUpdate\":false, \"endOnLastSourceEnd\":true, webglContextAttributes: {preserveDrawingBuffer: true, alpha: false }}){\n        this._canvas = canvas;\n        let manualUpdate = false;\n        this.endOnLastSourceEnd = true;\n        let webglContextAttributes = {preserveDrawingBuffer: true, alpha: false };\n\n        if (\"manualUpdate\" in options) manualUpdate = options.manualUpdate;\n        if (\"endOnLastSourceEnd\" in options) this.endOnLastSourceEnd = options.endOnLastSourceEnd;\n        if (\"webglContextAttributes\" in options) webglContextAttributes = options.webglContextAttributes;\n\n        if (webglContextAttributes.alpha === undefined) webglContextAttributes.alpha = false;\n        if (webglContextAttributes.alpha === true){\n            console.error(\"webglContextAttributes.alpha must be false for correct opeation\");\n        }\n\n\n        this._gl = canvas.getContext(\"experimental-webgl\", webglContextAttributes);\n        if(this._gl === null){\n            console.error(\"Failed to intialise WebGL.\");\n            if(initErrorCallback)initErrorCallback();\n            return;\n        }\n\n\n        this._renderGraph = new RenderGraph();\n        this._sourceNodes = [];\n        this._processingNodes = [];\n        this._timeline = [];\n        this._currentTime = 0;\n        this._state = VideoContext.STATE.PAUSED;\n        this._playbackRate = 1.0;\n        this._destinationNode = new DestinationNode(this._gl, this._renderGraph);\n\n        this._callbacks = new Map();\n        this._callbacks.set(\"stalled\", []);\n        this._callbacks.set(\"update\", []);\n        this._callbacks.set(\"ended\", []);\n\n        this._timelineCallbacks = [];\n\n        if(!manualUpdate){\n            updateablesManager.register(this);\n        }\n    }\n\n    /**\n    * Register a callback to happen at a specific point in time.\n    * @param {number} time - the time at which to trigger the callback.\n    * @param {Function} func - the callback to register.\n    * @param {number} ordering - the order in which to call the callback if more than one is registered for the same time.\n    */\n    registerTimelineCallback(time, func, ordering= 0){\n        this._timelineCallbacks.push({\"time\":time, \"func\":func, \"ordering\":ordering});\n    }\n\n\n    /**\n    * Unregister a callback which happens at a specific point in time.\n    * @param {Function} func - the callback to unregister.\n    */\n    unregisterTimelineCallback(func){\n        let toRemove = [];\n        for(let callback of this._timelineCallbacks){\n            if (callback.func === func){\n                toRemove.push(callback);\n            }\n        }\n        for (let callback of toRemove){\n            let index = this._timelineCallbacks.indexOf(callback);\n            this._timelineCallbacks.splice(index, 1);\n        }\n    }\n\n    /**\n    * Regsiter a callback to listen to one of the following events: \"stalled\", \"update\", \"ended\"\n    *\n    * \"stalled\" happend anytime playback is stopped due to unavailbale data for playing assets (i.e video still loading)\n    * . \"update\" is called any time a frame is rendered to the screen. \"ended\" is called once plackback has finished\n    * (i.e ctx.currentTime == ctx.duration).\n    *\n    * @param {String} type - the event to register against (\"stalled\", \"update\", or \"ended\").\n    * @param {Function} func - the callback to register.\n    *\n    * @example\n    * var canvasElement = document.getElemenyById(\"canvas\");\n    * var ctx = new VideoContext(canvasElement);\n    * ctx.registerCallback(\"stalled\", function(){console.log(\"Playback stalled\");});\n    * ctx.registerCallback(\"update\", function(){console.log(\"new frame\");});\n    * ctx.registerCallback(\"ended\", function(){console.log(\"Playback ended\");});\n    */\n    registerCallback(type, func){\n        if (!this._callbacks.has(type)) return false;\n        this._callbacks.get(type).push(func);\n    }\n\n    /**\n    * Remove a previously registed callback\n    *\n    * @param {Function} func - the callback to remove.\n    *\n    * @example\n    * var canvasElement = document.getElemenyById(\"canvas\");\n    * var ctx = new VideoContext(canvasElement);\n    *\n    * //the callback\n    * var updateCallback = function(){console.log(\"new frame\")};\n    *\n    * //register the callback\n    * ctx.registerCallback(\"update\", updateCallback);\n    * //then unregister it\n    * ctx.unregisterCallback(updateCallback);\n    *\n    */\n    unregisterCallback(func){\n        for(let funcArray of this._callbacks.values()){\n            let index = funcArray.indexOf(func);\n            if (index !== -1){\n                funcArray.splice(index, 1);\n                return true;\n            }\n        }\n        return false;\n    }\n\n    _callCallbacks(type){\n        let funcArray = this._callbacks.get(type);\n        for (let func of funcArray){\n            func(this._currentTime);\n        }\n    }\n\n    /**\n    * Get the canvas that the VideoContext is using.\n    *\n    * @return {HTMLElement} The canvas that the VideoContext is using.\n    *\n    */\n    get canvas(){\n        return this._canvas;\n    }\n\n    /**\n    * Get the current state.\n    *\n    * This will be either\n    *  - VideoContext.STATE.PLAYING: all sources are active\n    *  - VideoContext.STATE.PAUSED: all sources are paused\n    *  - VideoContext.STATE.STALLED: one or more sources is unable to play\n    *  - VideoContext.STATE.ENDED: all sources have finished playing\n    *  - VideoContext.STATE.BROKEN: the render graph is in a broken state\n    * @return {number} The number representing the state.\n    *\n    */\n    get state(){\n        return this._state;\n    }\n\n    /**\n    * Set the progress through the internal timeline.\n    * Setting this can be used as a way to implement a scrubaable timeline.\n    *\n    * @param {number} currentTime - this is the currentTime to set the context to.\n    *\n    * @example\n    * var canvasElement = document.getElemenyById(\"canvas\");\n    * var ctx = new VideoContext(canvasElement);\n    * var videoNode = ctx.createVideoSourceNode(\"video.mp4\");\n    * videoNode.connect(ctx.destination);\n    * videoNode.start(0);\n    * videoNode.stop(20);\n    * ctx.currentTime = 10; // seek 10 seconds in\n    * ctx.play();\n    *\n    */\n    set currentTime(currentTime){\n        console.debug(\"VideoContext - seeking to\", currentTime);\n        if (currentTime < this._duration && this._state === VideoContext.STATE.ENDED) this._state = VideoContext.STATE.PAUSED;\n        if (typeof currentTime === \"string\" || currentTime instanceof String){\n            currentTime = parseFloat(currentTime);\n        }\n\n        for (let i = 0; i < this._sourceNodes.length; i++) {\n            this._sourceNodes[i]._seek(currentTime);\n        }\n        for (let i = 0; i < this._processingNodes.length; i++) {\n            this._processingNodes[i]._seek(currentTime);\n        }\n        this._currentTime = currentTime;\n    }\n\n    /**\n    * Get how far through the internal timeline has been played.\n    *\n    * Getting this value will give the current playhead position. Can be used for updating timelines.\n    * @return {number} The time in seconds through the current playlist.\n    *\n    * @example\n    * var canvasElement = document.getElemenyById(\"canvas\");\n    * var ctx = new VideoContext(canvasElement);\n    * var videoNode = ctx.createVideoSourceNode(\"video.mp4\");\n    * videoNode.connect(ctx.destination);\n    * videoNode.start(0);\n    * videoNode.stop(10);\n    * ctx.play();\n    * setTimeout(funtion(){console.log(ctx.currentTime);},1000); //should print roughly 1.0\n    *\n    */\n    get currentTime(){\n        return this._currentTime;\n    }\n\n    /**\n    * Get the time at which the last node in the current internal timeline finishes playing.\n    *\n    * @return {number} The end time in seconds of the last video node to finish playing.\n    *\n    * @example\n    * var canvasElement = document.getElemenyById(\"canvas\");\n    * var ctx = new VideoContext(canvasElement);\n    * console.log(ctx.duration); //prints 0\n    *\n    * var videoNode = ctx.createVideoSourceNode(\"video.mp4\");\n    * videoNode.connect(ctx.destination);\n    * videoNode.start(0);\n    * videoNode.stop(10);\n    *\n    * console.log(ctx.duration); //prints 10\n    *\n    * ctx.play();\n    */\n    get duration(){\n        let maxTime = 0;\n        for (let i = 0; i < this._sourceNodes.length; i++) {\n            if (this._sourceNodes[i].state !== SOURCENODESTATE.waiting &&this._sourceNodes[i]._stopTime > maxTime){\n                maxTime = this._sourceNodes[i]._stopTime;\n            }\n        }\n        return maxTime;\n    }\n\n\n    /**\n    * Get the final node in the render graph which represents the canvas to display content on to.\n    *\n    * This proprety is read-only and there can only ever be one destination node. Other nodes can connect to this but you cannot connect this node to anything.\n    *\n    * @return {DestinationNode} A graph node represnting the canvas to display the content on.\n    * @example\n    * var canvasElement = document.getElemenyById(\"canvas\");\n    * var ctx = new VideoContext(canvasElement);\n    * var videoNode = ctx.createVideoSourceNode(\"video.mp4\");\n    * videoNode.start(0);\n    * videoNode.stop(10);\n    * videoNode.connect(ctx.destination);\n    *\n    */\n    get destination(){\n        return this._destinationNode;\n    }\n\n    /**\n    * Set the playback rate of the VideoContext instance.\n    * This will alter the playback speed of all media elements played through the VideoContext.\n    *\n    * @param {number} rate - this is the playback rate.\n    *\n    * @example\n    * var canvasElement = document.getElemenyById(\"canvas\");\n    * var ctx = new VideoContext(canvasElement);\n    * var videoNode = ctx.createVideoSourceNode(\"video.mp4\");\n    * videoNode.start(0);\n    * videoNode.stop(10);\n    * videoNode.connect(ctx.destination);\n    * ctx.playbackRate = 2;\n    * ctx.play(); // Double playback rate means this will finish playing in 5 seconds.\n    */\n    set playbackRate(rate){\n        for (let node of this._sourceNodes) {\n            if (node.constructor.name === \"VideoNode\") node._globalPlaybackRate = rate;\n        }\n        this._playbackRate = rate;\n    }\n\n\n    /**\n    *  Return the current playbackRate of the video context.\n    * @return {number} A value representing the playbackRate. 1.0 by default.\n    */\n    get playbackRate(){\n        return this._playbackRate;\n    }\n\n\n    /**\n    * Start the VideoContext playing\n    * @example\n    * var canvasElement = document.getElemenyById(\"canvas\");\n    * var ctx = new VideoContext(canvasElement);\n    * var videoNode = ctx.createVideoSourceNode(\"video.mp4\");\n    * videoNode.connect(ctx.destination);\n    * videoNode.start(0);\n    * videoNode.stop(10);\n    * ctx.play();\n    */\n    play(){\n        console.debug(\"VideoContext - playing\");\n        this._state = VideoContext.STATE.PLAYING;\n        return true;\n    }\n\n    /**\n    * Pause playback of the VideoContext\n    * @example\n    * var canvasElement = document.getElemenyById(\"canvas\");\n    * var ctx = new VideoContext(canvasElement);\n    * var videoNode = ctx.createVideoSourceNode(\"video.mp4\");\n    * videoNode.connect(ctx.destination);\n    * videoNode.start(0);\n    * videoNode.stop(20);\n    * ctx.currentTime = 10; // seek 10 seconds in\n    * ctx.play();\n    * setTimeout(function(){ctx.pause();}, 1000); //pause playback after roughly one second.\n    */\n    pause(){\n        console.debug(\"VideoContext - pausing\");\n        this._state = VideoContext.STATE.PAUSED;\n        return true;\n    }\n\n    /**\n    * Create a new node representing a video source\n    *\n    * @return {VideoNode} A new video node.\n    *\n    * @example\n    * var canvasElement = document.getElemenyById(\"canvas\");\n    * var ctx = new VideoContext(canvasElement);\n    * var videoNode = ctx.createVideoSourceNode(\"video.mp4\");\n    *\n    * @example\n    * var canvasElement = document.getElemenyById(\"canvas\");\n    * var videoElement = document.getElemenyById(\"video\");\n    * var ctx = new VideoContext(canvasElement);\n    * var videoNode = ctx.createVideoSourceNode(videoElement);\n    */\n    createVideoSourceNode(src, sourceOffset=0, preloadTime=4, videoElementAttributes={}){\n        let videoNode = new VideoNode(src, this._gl, this._renderGraph, this._currentTime, this._playbackRate, sourceOffset, preloadTime, videoElementAttributes);\n        this._sourceNodes.push(videoNode);\n        return videoNode;\n    }\n\n    /**\n    * Create a new node representing an image source\n    *\n    * @return {ImageNode} A new image node.\n    *\n    * @example\n    * var canvasElement = document.getElemenyById(\"canvas\");\n    * var ctx = new VideoContext(canvasElement);\n    * var imageNode = ctx.createVideoSourceNode(\"image.png\");\n    *\n    * @example\n    * var canvasElement = document.getElemenyById(\"canvas\");\n    * var imageElement = document.getElemenyById(\"image\");\n    * var ctx = new VideoContext(canvasElement);\n    * var imageNode = ctx.createVideoSourceNode(imageElement);\n    */\n    createImageSourceNode(src, sourceOffset=0, preloadTime=4){\n        let imageNode = new ImageNode(src, this._gl, this._renderGraph, this._currentTime, preloadTime);\n        this._sourceNodes.push(imageNode);\n        return imageNode;\n    }\n\n    /**\n    * Create a new node representing a canvas source\n    *\n    * @return {CanvasNode} A new canvas node.\n    */\n    createCanvasSourceNode(canvas, sourceOffset=0, preloadTime=4){\n        let canvasNode = new CanvasNode(canvas, this._gl, this._renderGraph, this._currentTime, preloadTime);\n        this._sourceNodes.push(canvasNode);\n        return canvasNode;\n    }\n\n\n\n    /**\n    * Create a new effect node.\n    * @return {EffectNode} A new effect node created from the passed definition\n    */\n    createEffectNode(definition){\n        let effectNode = new EffectNode(this._gl, this._renderGraph, definition);\n        this._processingNodes.push(effectNode);\n        return effectNode;\n    }\n\n    /**\n    * Create a new compositiing node.\n    *\n    * Compositing nodes are used for operations such as combining multiple video sources into a single track/connection for further processing in the graph.\n    *\n    * A compositing node is slightly different to other processing nodes in that it only has one input in it's definition but can have unlimited connections made to it.\n    * The shader in the definition is run for each input in turn, drawing them to the output buffer. This means there can be no interaction between the spearte inputs to a compositing node, as they are individually processed in seperate shader passes.\n    *\n    * @param {Object} definition - this is an object defining the shaders, inputs, and properties of the compositing node to create.\n    *\n    * @return {CompositingNode} A new compositing node created from the passed definition.\n    *\n    * @example\n    *\n    * var canvasElement = document.getElemenyById(\"canvas\");\n    * var ctx = new VideoContext(canvasElement);\n    *\n    * //A simple compositing node definition which just renders all the inputs to the output buffer.\n    * var combineDefinition = {\n    *     vertexShader : \"\\\n    *         attribute vec2 a_position;\\\n    *         attribute vec2 a_texCoord;\\\n    *         varying vec2 v_texCoord;\\\n    *         void main() {\\\n    *             gl_Position = vec4(vec2(2.0,2.0)*vec2(1.0, 1.0), 0.0, 1.0);\\\n    *             v_texCoord = a_texCoord;\\\n    *         }\",\n    *     fragmentShader : \"\\\n    *         precision mediump float;\\\n    *         uniform sampler2D u_image;\\\n    *         uniform float a;\\\n    *         varying vec2 v_texCoord;\\\n    *         varying float v_progress;\\\n    *         void main(){\\\n    *             vec4 color = texture2D(u_image, v_texCoord);\\\n    *             gl_FragColor = color;\\\n    *         }\",\n    *     properties:{\n    *         \"a\":{type:\"uniform\", value:0.0},\n    *     },\n    *     inputs:[\"u_image\"]\n    * };\n    * //Create the node, passing in the definition.\n    * var trackNode = videoCtx.createCompositingNode(combineDefinition);\n    *\n    * //create two videos which will play at back to back\n    * var videoNode1 = ctx.createVideoSourceNode(\"video1.mp4\");\n    * videoNode1.play(0);\n    * videoNode1.stop(10);\n    * var videoNode2 = ctx.createVideoSourceNode(\"video2.mp4\");\n    * videoNode2.play(10);\n    * videoNode2.stop(20);\n    *\n    * //Connect the nodes to the combine node. This will give a single connection representing the two videos which can\n    * //be connected to other effects such as LUTs, chromakeyers, etc.\n    * videoNode1.connect(trackNode);\n    * videoNode2.connect(trackNode);\n    *\n    * //Don't do anything exciting, just connect it to the output.\n    * trackNode.connect(ctx.destination);\n    *\n    */\n    createCompositingNode(definition){\n        let compositingNode = new CompositingNode(this._gl, this._renderGraph, definition);\n        this._processingNodes.push(compositingNode);\n        return compositingNode;\n    }\n\n    /**\n    * Create a new transition node.\n    *\n    * Transistion nodes are a type of effect node which have parameters which can be changed as events on the timeline.\n    *\n    * For example a transition node which cross-fades between two videos could have a \"mix\" property which sets the\n    * progress through the transistion. Rather than having to write your own code to adjust this property at specfic\n    * points in time a transition node has a \"transition\" function which takes a startTime, stopTime, targetValue, and a\n    * propertyName (which will be \"mix\"). This will linearly interpolate the property from the curernt value to\n    * tragetValue between the startTime and stopTime.\n    *\n    * @param {Object} definition - this is an object defining the shaders, inputs, and properties of the transition node to create.\n    * @return {TransitionNode} A new transition node created from the passed definition.\n    * @example\n    *\n    * var canvasElement = document.getElemenyById(\"canvas\");\n    * var ctx = new VideoContext(canvasElement);\n    *\n    * //A simple cross-fade node definition which cross-fades between two videos based on the mix property.\n    * var crossfadeDefinition = {\n    *     vertexShader : \"\\\n    *        attribute vec2 a_position;\\\n    *        attribute vec2 a_texCoord;\\\n    *        varying vec2 v_texCoord;\\\n    *        void main() {\\\n    *            gl_Position = vec4(vec2(2.0,2.0)*a_position-vec2(1.0, 1.0), 0.0, 1.0);\\\n    *            v_texCoord = a_texCoord;\\\n    *         }\",\n    *     fragmentShader : \"\\\n    *         precision mediump float;\\\n    *         uniform sampler2D u_image_a;\\\n    *         uniform sampler2D u_image_b;\\\n    *         uniform float mix;\\\n    *         varying vec2 v_texCoord;\\\n    *         varying float v_mix;\\\n    *         void main(){\\\n    *             vec4 color_a = texture2D(u_image_a, v_texCoord);\\\n    *             vec4 color_b = texture2D(u_image_b, v_texCoord);\\\n    *             color_a[0] *= mix;\\\n    *             color_a[1] *= mix;\\\n    *             color_a[2] *= mix;\\\n    *             color_a[3] *= mix;\\\n    *             color_b[0] *= (1.0 - mix);\\\n    *             color_b[1] *= (1.0 - mix);\\\n    *             color_b[2] *= (1.0 - mix);\\\n    *             color_b[3] *= (1.0 - mix);\\\n    *             gl_FragColor = color_a + color_b;\\\n    *         }\",\n    *     properties:{\n    *         \"mix\":{type:\"uniform\", value:0.0},\n    *     },\n    *     inputs:[\"u_image_a\",\"u_image_b\"]\n    * };\n    *\n    * //Create the node, passing in the definition.\n    * var transitionNode = videoCtx.createTransitionNode(crossfadeDefinition);\n    *\n    * //create two videos which will overlap by two seconds\n    * var videoNode1 = ctx.createVideoSourceNode(\"video1.mp4\");\n    * videoNode1.play(0);\n    * videoNode1.stop(10);\n    * var videoNode2 = ctx.createVideoSourceNode(\"video2.mp4\");\n    * videoNode2.play(8);\n    * videoNode2.stop(18);\n    *\n    * //Connect the nodes to the transistion node.\n    * videoNode1.connect(transitionNode);\n    * videoNode2.connect(transitionNode);\n    *\n    * //Set-up a transition which happens at the crossover point of the playback of the two videos\n    * transitionNode.transition(8,10,1.0,\"mix\");\n    *\n    * //Connect the transition node to the output\n    * transitionNode.connect(ctx.destination);\n    *\n    * //start playback\n    * ctx.play();\n    */\n    createTransitionNode(definition){\n        let transitionNode = new TransitionNode(this._gl, this._renderGraph, definition);\n        this._processingNodes.push(transitionNode);\n        return transitionNode;\n    }\n\n    _isStalled(){\n        for (let i = 0; i < this._sourceNodes.length; i++) {\n            let sourceNode = this._sourceNodes[i];\n            if (!sourceNode._isReady()){\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n    * This allows manual calling of the update loop of the videoContext. \n    *\n    * @param {Number} dt - The difference in seconds between this and the previous calling of update.\n    * @example\n    *\n    * var canvasElement = document.getElemenyById(\"canvas\");\n    * var ctx = new VideoContext(canvasElement, undefined, {\"manualUpdate\" : true});\n    * \n    * var previousTime;\n    * function update(time){\n    *     if (previousTime === undefined) previousTime = time;\n    *     var dt = (time - previousTime)/1000;\n    *     ctx.update(dt);\n    *     previousTime = time;\n    *     requestAnimationFrame(update);\n    * }\n    * update();\n    *\n    */\n    update(dt){\n        this._update(dt);\n    }\n\n\n    _update(dt){\n        if (this._state === VideoContext.STATE.PLAYING || this._state === VideoContext.STATE.STALLED || this._state === VideoContext.STATE.PAUSED) {\n            this._callCallbacks(\"update\");\n\n            if (this._state !== VideoContext.STATE.PAUSED){\n                if (this._isStalled()){\n                    this._callCallbacks(\"stalled\");\n                    this._state = VideoContext.STATE.STALLED;\n                }else{\n                    this._state = VideoContext.STATE.PLAYING;\n                }\n            }\n\n            if(this._state === VideoContext.STATE.PLAYING){\n                //Handle timeline callbacks.\n                let activeCallbacks = new Map();\n                for(let callback of this._timelineCallbacks){\n                    if (callback.time >= this.currentTime && callback.time < (this._currentTime + dt * this._playbackRate)){\n                        //group the callbacks by time\n                        if(!activeCallbacks.has(callback.time)) activeCallbacks.set(callback.time, []);\n                        activeCallbacks.get(callback.time).push(callback);\n                    }\n                }\n\n\n                //Sort the groups of callbacks by the times of the groups\n                let timeIntervals = Array.from(activeCallbacks.keys());\n                timeIntervals.sort(function(a, b){\n                    return a - b;\n                });\n\n                for (let t of timeIntervals){\n                    let callbacks = activeCallbacks.get(t);\n                    callbacks.sort(function(a,b){\n                        return a.ordering - b.ordering;\n                    });\n                    for(let callback of callbacks){\n                        callback.func();\n                    }\n                }\n\n                // activeCallbacks.sort(function(a, b) {\n                //     return a.ordering - b.ordering;\n                // });\n                // for(let callback of activeCallbacks){\n                //     callback.func();\n                // }\n\n\n                this._currentTime += dt * this._playbackRate;\n                if(this._currentTime > this.duration && this._endOnLastSourceEnd){\n                    this._callCallbacks(\"ended\");\n                    this._state = VideoContext.STATE.ENDED;\n                }\n            }\n\n            for (let i = 0; i < this._sourceNodes.length; i++) {\n                let sourceNode = this._sourceNodes[i];\n                sourceNode._update(this._currentTime);\n\n                if(this._state === VideoContext.STATE.STALLED){\n                    if (sourceNode._isReady() && sourceNode._state === SOURCENODESTATE.playing) sourceNode._pause();\n                }\n                if(this._state === VideoContext.STATE.PAUSED){\n                    if (sourceNode._state === SOURCENODESTATE.playing)sourceNode._pause();\n                }\n                if(this._state === VideoContext.STATE.PLAYING){\n                    if (sourceNode._state === SOURCENODESTATE.paused)sourceNode._play();\n                }\n            }\n\n\n\n\n            /*\n            * Itterate the directed acyclic graph using Khan's algorithm (KHAAAAAN!).\n            *\n            * This has highlighted a bunch of ineffencies in the rendergraph class about how its stores connections.\n            * Mainly the fact that to get inputs for a node you have to iterate the full list of connections rather than\n            * a node owning it's connections.\n            * The trade off with changing this is making/removing connections becomes more costly performance wise, but\n            * this is deffinately worth while because getting the connnections is a much more common operation.\n            *\n            * TL;DR Future matt - refactor this.\n            *\n            */\n            let sortedNodes = [];\n            let connections = this._renderGraph.connections.slice();\n            let nodes = RenderGraph.getInputlessNodes(connections);\n\n\n            while (nodes.length > 0) {\n                let node = nodes.pop();\n                sortedNodes.push(node);\n                for (let edge of RenderGraph.outputEdgesFor(node, connections)){\n                    let index = connections.indexOf(edge);\n                    if (index > -1) connections.splice(index, 1);\n                    if (RenderGraph.inputEdgesFor(edge.destination, connections).length === 0){\n                        nodes.push(edge.destination);\n                    }\n                }\n            }\n\n            for (let node of sortedNodes){\n                if (this._sourceNodes.indexOf(node) === -1){\n                    node._update(this._currentTime);\n                    node._render();\n                }\n            }\n\n            /*for (let node of this._processingNodes) {\n                node._update(this._currentTime);\n                node._render();\n            }\n            this._destinationNode._render();*/\n\n        }\n    }\n\n    static get DEFINITIONS() {\n\n        var aaf_video_scale = {\n            title:\"AAF Video Scale Effect\",\n            description: \"A scale effect based on the AAF spec.\",\n            vertexShader : \"\\\n                attribute vec2 a_position;\\\n                attribute vec2 a_texCoord;\\\n                varying vec2 v_texCoord;\\\n                void main() {\\\n                    gl_Position = vec4(vec2(2.0,2.0)*a_position-vec2(1.0, 1.0), 0.0, 1.0);\\\n                    v_texCoord = a_texCoord;\\\n                }\",\n            fragmentShader : \"\\\n                precision mediump float;\\\n                uniform sampler2D u_image;\\\n                uniform float scaleX;\\\n                uniform float scaleY;\\\n                varying vec2 v_texCoord;\\\n                varying float v_progress;\\\n                void main(){\\\n                    vec2 pos = vec2(v_texCoord[0]*1.0/scaleX - (1.0/scaleX/2.0 -0.5), v_texCoord[1]*1.0/scaleY - (1.0/scaleY/2.0 -0.5));\\\n                    vec4 color = texture2D(u_image, pos);\\\n                    if (pos[0] < 0.0 || pos[0] > 1.0 || pos[1] < 0.0 || pos[1] > 1.0){\\\n                        color = vec4(0.0,0.0,0.0,0.0);\\\n                    }\\\n                    gl_FragColor = color;\\\n                }\",\n            properties:{\n                \"scaleX\":{type:\"uniform\", value:1.0},\n                \"scaleY\":{type:\"uniform\", value:1.0}\n            },\n            inputs:[\"u_image\"]\n        };\n\n\n        var aaf_video_position = {\n            title:\"AAF Video Position Effect\",\n            description: \"A position effect based on the AAF spec.\",\n            vertexShader : \"\\\n                attribute vec2 a_position;\\\n                attribute vec2 a_texCoord;\\\n                varying vec2 v_texCoord;\\\n                void main() {\\\n                    gl_Position = vec4(vec2(2.0,2.0)*a_position-vec2(1.0, 1.0), 0.0, 1.0);\\\n                    v_texCoord = a_texCoord;\\\n                }\",\n            fragmentShader : \"\\\n                precision mediump float;\\\n                uniform sampler2D u_image;\\\n                uniform float positionOffsetX;\\\n                uniform float positionOffsetY;\\\n                varying vec2 v_texCoord;\\\n                varying float v_progress;\\\n                void main(){\\\n                    vec2 pos = vec2(v_texCoord[0] - positionOffsetX/2.0, v_texCoord[1] -  positionOffsetY/2.0);\\\n                    vec4 color = texture2D(u_image, pos);\\\n                    if (pos[0] < 0.0 || pos[0] > 1.0 || pos[1] < 0.0 || pos[1] > 1.0){\\\n                        color = vec4(0.0,0.0,0.0,0.0);\\\n                    }\\\n                    gl_FragColor = color;\\\n                }\",\n            properties:{\n                \"positionOffsetX\":{type:\"uniform\", value:0.0},\n                \"positionOffsetY\":{type:\"uniform\", value:0.0}\n            },\n            inputs:[\"u_image\"]\n        };\n\n\n        var aaf_video_crop = {\n            title:\"AAF Video Crop Effect\",\n            description: \"A crop effect based on the AAF spec.\",\n            vertexShader : \"\\\n                    attribute vec2 a_position;\\\n                    attribute vec2 a_texCoord;\\\n                    varying vec2 v_texCoord;\\\n                    void main() {\\\n                        gl_Position = vec4(vec2(2.0,2.0)*a_position-vec2(1.0, 1.0), 0.0, 1.0);\\\n                        v_texCoord = a_texCoord;\\\n                    }\",\n            fragmentShader : \"\\\n                    precision mediump float;\\\n                    uniform sampler2D u_image;\\\n                    uniform float cropLeft;\\\n                    uniform float cropRight;\\\n                    uniform float cropTop;\\\n                    uniform float cropBottom;\\\n                    varying vec2 v_texCoord;\\\n                    void main(){\\\n                        vec4 color = texture2D(u_image, v_texCoord);\\\n                        if (v_texCoord[0] < (cropLeft+1.0)/2.0) color = vec4(0.0,0.0,0.0,0.0);\\\n                        if (v_texCoord[0] > (cropRight+1.0)/2.0) color = vec4(0.0,0.0,0.0,0.0);\\\n                        if (v_texCoord[1] < (-cropBottom+1.0)/2.0) color = vec4(0.0,0.0,0.0,0.0);\\\n                        if (v_texCoord[1] > (-cropTop+1.0)/2.0) color = vec4(0.0,0.0,0.0,0.0);\\\n                        gl_FragColor = color;\\\n                    }\",\n            properties:{\n                \"cropLeft\":{type:\"uniform\", value:-1.0},\n                \"cropRight\":{type:\"uniform\", value:1.0},\n                \"cropTop\":{type:\"uniform\", value: -1.0},\n                \"cropBottom\":{type:\"uniform\", value: 1.0}\n            },\n            inputs:[\"u_image\"]\n        };\n\n\n        var aaf_video_flip = {\n            title:\"AAF Video Scale Effect\",\n            description: \"A flip effect based on the AAF spec. Mirrors the image in the x-axis\",\n            vertexShader : \"\\\n                    attribute vec2 a_position;\\\n                    attribute vec2 a_texCoord;\\\n                    varying vec2 v_texCoord;\\\n                    void main() {\\\n                        gl_Position = vec4(vec2(2.0,2.0)*a_position-vec2(1.0, 1.0), 0.0, 1.0);\\\n                        v_texCoord = a_texCoord;\\\n                    }\",\n            fragmentShader : \"\\\n                    precision mediump float;\\\n                    uniform sampler2D u_image;\\\n                    varying vec2 v_texCoord;\\\n                    void main(){\\\n                        vec2 coord = vec2(v_texCoord[0] ,1.0 - v_texCoord[1]);\\\n                        vec4 color = texture2D(u_image, coord);\\\n                        gl_FragColor = color;\\\n                    }\",\n            properties:{\n            },\n            inputs:[\"u_image\"]\n        };\n\n        var aaf_video_flop = {\n            title:\"AAF Video Scale Effect\",\n            description: \"A flop effect based on the AAF spec. Mirrors the image in the y-axis\",\n            vertexShader : \"\\\n                    attribute vec2 a_position;\\\n                    attribute vec2 a_texCoord;\\\n                    varying vec2 v_texCoord;\\\n                    void main() {\\\n                        gl_Position = vec4(vec2(2.0,2.0)*a_position-vec2(1.0, 1.0), 0.0, 1.0);\\\n                        v_texCoord = a_texCoord;\\\n                    }\",\n            fragmentShader : \"\\\n                    precision mediump float;\\\n                    uniform sampler2D u_image;\\\n                    varying vec2 v_texCoord;\\\n                    void main(){\\\n                        vec2 coord = vec2(1.0 - v_texCoord[0] ,v_texCoord[1]);\\\n                        vec4 color = texture2D(u_image, coord);\\\n                        gl_FragColor = color;\\\n                    }\",\n            properties:{\n            },\n            inputs:[\"u_image\"]\n        };\n\n\n\n        var crossfade = {\n            title:\"Cross-Fade\",\n            description: \"A cross-fade effect. Typically used as a transistion.\",\n            vertexShader : \"\\\n                    attribute vec2 a_position;\\\n                    attribute vec2 a_texCoord;\\\n                    varying vec2 v_texCoord;\\\n                    void main() {\\\n                        gl_Position = vec4(vec2(2.0,2.0)*a_position-vec2(1.0, 1.0), 0.0, 1.0);\\\n                        v_texCoord = a_texCoord;\\\n                    }\",\n            fragmentShader : \"\\\n                    precision mediump float;\\\n                    uniform sampler2D u_image_a;\\\n                    uniform sampler2D u_image_b;\\\n                    uniform float mix;\\\n                    varying vec2 v_texCoord;\\\n                    varying float v_mix;\\\n                    void main(){\\\n                        vec4 color_a = texture2D(u_image_a, v_texCoord);\\\n                        vec4 color_b = texture2D(u_image_b, v_texCoord);\\\n                        color_a[0] *= mix;\\\n                        color_a[1] *= mix;\\\n                        color_a[2] *= mix;\\\n                        color_a[3] *= mix;\\\n                        color_b[0] *= (1.0 - mix);\\\n                        color_b[1] *= (1.0 - mix);\\\n                        color_b[2] *= (1.0 - mix);\\\n                        color_b[3] *= (1.0 - mix);\\\n                        gl_FragColor = color_a + color_b;\\\n                    }\",\n            properties:{\n                \"mix\":{type:\"uniform\", value:0.0}\n            },\n            inputs:[\"u_image_a\",\"u_image_b\"]\n        };\n\n        var combine ={\n            title:\"Combine\",\n            description: \"A basic effect which renders the input to the output, Typically used as a combine node for layering up media with alpha transparency.\",\n            vertexShader : \"\\\n                    attribute vec2 a_position;\\\n                    attribute vec2 a_texCoord;\\\n                    varying vec2 v_texCoord;\\\n                    void main() {\\\n                        gl_Position = vec4(vec2(2.0,2.0)*a_position-vec2(1.0, 1.0), 0.0, 1.0);\\\n                        v_texCoord = a_texCoord;\\\n                    }\",\n            fragmentShader : \"\\\n                    precision mediump float;\\\n                    uniform sampler2D u_image;\\\n                    uniform float a;\\\n                    varying vec2 v_texCoord;\\\n                    varying float v_mix;\\\n                    void main(){\\\n                        vec4 color = texture2D(u_image, v_texCoord);\\\n                        gl_FragColor = color;\\\n                    }\",\n            properties:{\n                \"a\":{type:\"uniform\", value:0.0}\n            },\n            inputs:[\"u_image\"]\n        };\n\n        var colorThreshold = {\n            title:\"Color Threshold\",\n            description: \"Turns all pixels with a greater value than the specified threshold transparent.\",\n            vertexShader : \"\\\n                    attribute vec2 a_position;\\\n                    attribute vec2 a_texCoord;\\\n                    varying vec2 v_texCoord;\\\n                    void main() {\\\n                        gl_Position = vec4(vec2(2.0,2.0)*a_position-vec2(1.0, 1.0), 0.0, 1.0);\\\n                        v_texCoord = a_texCoord;\\\n                    }\",\n            fragmentShader : \"\\\n                    precision mediump float;\\\n                    uniform sampler2D u_image;\\\n                    uniform float a;\\\n                    uniform vec3 colorAlphaThreshold;\\\n                    varying vec2 v_texCoord;\\\n                    varying float v_mix;\\\n                    void main(){\\\n                        vec4 color = texture2D(u_image, v_texCoord);\\\n                        if (color[0] > colorAlphaThreshold[0] && color[1]> colorAlphaThreshold[1] && color[2]> colorAlphaThreshold[2]){\\\n                            color = vec4(0.0,0.0,0.0,0.0);\\\n                        }\\\n                        gl_FragColor = color;\\\n                    }\",\n            properties:{\n                \"a\":{type:\"uniform\", value:0.0},\n                \"colorAlphaThreshold\":{type:\"uniform\", value:[0.0,0.55,0.0]}\n            },\n            inputs:[\"u_image\"]\n        };\n\n        var monochrome = {\n            title:\"Monochrome\",\n            description: \"Change images to a single chroma (e.g can be used to make a black & white filter). Input color mix and output color mix can be adjusted.\",\n            vertexShader : \"\\\n                    attribute vec2 a_position;\\\n                    attribute vec2 a_texCoord;\\\n                    varying vec2 v_texCoord;\\\n                    void main() {\\\n                        gl_Position = vec4(vec2(2.0,2.0)*a_position-vec2(1.0, 1.0), 0.0, 1.0);\\\n                        v_texCoord = a_texCoord;\\\n                    }\",\n            fragmentShader : \"\\\n                    precision mediump float;\\\n                    uniform sampler2D u_image;\\\n                    uniform vec3 inputMix;\\\n                    uniform vec3 outputMix;\\\n                    varying vec2 v_texCoord;\\\n                    varying float v_mix;\\\n                    void main(){\\\n                        vec4 color = texture2D(u_image, v_texCoord);\\\n                        float mono = color[0]*inputMix[0] + color[1]*inputMix[1] + color[2]*inputMix[2];\\\n                        color[0] = mono * outputMix[0];\\\n                        color[1] = mono * outputMix[1];\\\n                        color[2] = mono * outputMix[2];\\\n                        gl_FragColor = color;\\\n                    }\",\n            properties:{\n                \"inputMix\":{type:\"uniform\", value:[0.4,0.6,0.2]},\n                \"outputMix\":{type:\"uniform\", value:[1.0,1.0,1.0]}\n            },\n            inputs:[\"u_image\"]\n        };\n\n        var hoizontalBlur = {\n            title:\"Horizontal Blur\",\n            description: \"A horizontal blur effect. Adpated from http://xissburg.com/faster-gaussian-blur-in-glsl/\",\n            vertexShader : \"\\\n                attribute vec2 a_position;\\\n                attribute vec2 a_texCoord;\\\n                uniform float blurAmount;\\\n                varying vec2 v_texCoord;\\\n                varying vec2 v_blurTexCoords[14];\\\n                void main() {\\\n                    gl_Position = vec4(vec2(2.0,2.0)*a_position-vec2(1.0, 1.0), 0.0, 1.0);\\\n                    v_texCoord = a_texCoord;\\\n                    v_blurTexCoords[ 0] = v_texCoord + vec2(-0.028 * blurAmount, 0.0);\\\n                    v_blurTexCoords[ 1] = v_texCoord + vec2(-0.024 * blurAmount, 0.0);\\\n                    v_blurTexCoords[ 2] = v_texCoord + vec2(-0.020 * blurAmount, 0.0);\\\n                    v_blurTexCoords[ 3] = v_texCoord + vec2(-0.016 * blurAmount, 0.0);\\\n                    v_blurTexCoords[ 4] = v_texCoord + vec2(-0.012 * blurAmount, 0.0);\\\n                    v_blurTexCoords[ 5] = v_texCoord + vec2(-0.008 * blurAmount, 0.0);\\\n                    v_blurTexCoords[ 6] = v_texCoord + vec2(-0.004 * blurAmount, 0.0);\\\n                    v_blurTexCoords[ 7] = v_texCoord + vec2( 0.004 * blurAmount, 0.0);\\\n                    v_blurTexCoords[ 8] = v_texCoord + vec2( 0.008 * blurAmount, 0.0);\\\n                    v_blurTexCoords[ 9] = v_texCoord + vec2( 0.012 * blurAmount, 0.0);\\\n                    v_blurTexCoords[10] = v_texCoord + vec2( 0.016 * blurAmount, 0.0);\\\n                    v_blurTexCoords[11] = v_texCoord + vec2( 0.020 * blurAmount, 0.0);\\\n                    v_blurTexCoords[12] = v_texCoord + vec2( 0.024 * blurAmount, 0.0);\\\n                    v_blurTexCoords[13] = v_texCoord + vec2( 0.028 * blurAmount, 0.0);\\\n                }\",\n            fragmentShader : \"\\\n                precision mediump float;\\\n                uniform sampler2D u_image;\\\n                varying vec2 v_texCoord;\\\n                varying vec2 v_blurTexCoords[14];\\\n                void main(){\\\n                    gl_FragColor = vec4(0.0);\\\n                    gl_FragColor += texture2D(u_image, v_blurTexCoords[ 0])*0.0044299121055113265;\\\n                    gl_FragColor += texture2D(u_image, v_blurTexCoords[ 1])*0.00895781211794;\\\n                    gl_FragColor += texture2D(u_image, v_blurTexCoords[ 2])*0.0215963866053;\\\n                    gl_FragColor += texture2D(u_image, v_blurTexCoords[ 3])*0.0443683338718;\\\n                    gl_FragColor += texture2D(u_image, v_blurTexCoords[ 4])*0.0776744219933;\\\n                    gl_FragColor += texture2D(u_image, v_blurTexCoords[ 5])*0.115876621105;\\\n                    gl_FragColor += texture2D(u_image, v_blurTexCoords[ 6])*0.147308056121;\\\n                    gl_FragColor += texture2D(u_image, v_texCoord         )*0.159576912161;\\\n                    gl_FragColor += texture2D(u_image, v_blurTexCoords[ 7])*0.147308056121;\\\n                    gl_FragColor += texture2D(u_image, v_blurTexCoords[ 8])*0.115876621105;\\\n                    gl_FragColor += texture2D(u_image, v_blurTexCoords[ 9])*0.0776744219933;\\\n                    gl_FragColor += texture2D(u_image, v_blurTexCoords[10])*0.0443683338718;\\\n                    gl_FragColor += texture2D(u_image, v_blurTexCoords[11])*0.0215963866053;\\\n                    gl_FragColor += texture2D(u_image, v_blurTexCoords[12])*0.00895781211794;\\\n                    gl_FragColor += texture2D(u_image, v_blurTexCoords[13])*0.0044299121055113265;\\\n                }\",\n            properties:{\n                \"blurAmount\":{type:\"uniform\", value:1.0}\n            },\n            inputs:[\"u_image\"]\n        };\n\n        var verticalBlur = {\n            title:\"Vertical Blur\",\n            description: \"A vertical blur effect. Adpated from http://xissburg.com/faster-gaussian-blur-in-glsl/\",\n            vertexShader : \"\\\n                attribute vec2 a_position;\\\n                attribute vec2 a_texCoord;\\\n                varying vec2 v_texCoord;\\\n                uniform float blurAmount;\\\n                varying vec2 v_blurTexCoords[14];\\\n                void main() {\\\n                    gl_Position = vec4(vec2(2.0,2.0)*a_position-vec2(1.0, 1.0), 0.0, 1.0);\\\n                    v_texCoord = a_texCoord;\\\n                    v_blurTexCoords[ 0] = v_texCoord + vec2(0.0,-0.028 * blurAmount);\\\n                    v_blurTexCoords[ 1] = v_texCoord + vec2(0.0,-0.024 * blurAmount);\\\n                    v_blurTexCoords[ 2] = v_texCoord + vec2(0.0,-0.020 * blurAmount);\\\n                    v_blurTexCoords[ 3] = v_texCoord + vec2(0.0,-0.016 * blurAmount);\\\n                    v_blurTexCoords[ 4] = v_texCoord + vec2(0.0,-0.012 * blurAmount);\\\n                    v_blurTexCoords[ 5] = v_texCoord + vec2(0.0,-0.008 * blurAmount);\\\n                    v_blurTexCoords[ 6] = v_texCoord + vec2(0.0,-0.004 * blurAmount);\\\n                    v_blurTexCoords[ 7] = v_texCoord + vec2(0.0, 0.004 * blurAmount);\\\n                    v_blurTexCoords[ 8] = v_texCoord + vec2(0.0, 0.008 * blurAmount);\\\n                    v_blurTexCoords[ 9] = v_texCoord + vec2(0.0, 0.012 * blurAmount);\\\n                    v_blurTexCoords[10] = v_texCoord + vec2(0.0, 0.016 * blurAmount);\\\n                    v_blurTexCoords[11] = v_texCoord + vec2(0.0, 0.020 * blurAmount);\\\n                    v_blurTexCoords[12] = v_texCoord + vec2(0.0, 0.024 * blurAmount);\\\n                    v_blurTexCoords[13] = v_texCoord + vec2(0.0, 0.028 * blurAmount);\\\n                }\",\n            fragmentShader : \"\\\n                precision mediump float;\\\n                uniform sampler2D u_image;\\\n                varying vec2 v_texCoord;\\\n                varying vec2 v_blurTexCoords[14];\\\n                void main(){\\\n                    gl_FragColor = vec4(0.0);\\\n                    gl_FragColor += texture2D(u_image, v_blurTexCoords[ 0])*0.0044299121055113265;\\\n                    gl_FragColor += texture2D(u_image, v_blurTexCoords[ 1])*0.00895781211794;\\\n                    gl_FragColor += texture2D(u_image, v_blurTexCoords[ 2])*0.0215963866053;\\\n                    gl_FragColor += texture2D(u_image, v_blurTexCoords[ 3])*0.0443683338718;\\\n                    gl_FragColor += texture2D(u_image, v_blurTexCoords[ 4])*0.0776744219933;\\\n                    gl_FragColor += texture2D(u_image, v_blurTexCoords[ 5])*0.115876621105;\\\n                    gl_FragColor += texture2D(u_image, v_blurTexCoords[ 6])*0.147308056121;\\\n                    gl_FragColor += texture2D(u_image, v_texCoord         )*0.159576912161;\\\n                    gl_FragColor += texture2D(u_image, v_blurTexCoords[ 7])*0.147308056121;\\\n                    gl_FragColor += texture2D(u_image, v_blurTexCoords[ 8])*0.115876621105;\\\n                    gl_FragColor += texture2D(u_image, v_blurTexCoords[ 9])*0.0776744219933;\\\n                    gl_FragColor += texture2D(u_image, v_blurTexCoords[10])*0.0443683338718;\\\n                    gl_FragColor += texture2D(u_image, v_blurTexCoords[11])*0.0215963866053;\\\n                    gl_FragColor += texture2D(u_image, v_blurTexCoords[12])*0.00895781211794;\\\n                    gl_FragColor += texture2D(u_image, v_blurTexCoords[13])*0.0044299121055113265;\\\n                }\",\n            properties:{\n                \"blurAmount\":{type:\"uniform\", value:1.0}\n            },\n            inputs:[\"u_image\"]\n        };\n\n        return {\n            CROSSFADE: crossfade,\n            COMBINE: combine,\n            COLORTHRESHOLD: colorThreshold,\n            MONOCHROME: monochrome,\n            HORIZONTAL_BLUR:hoizontalBlur,\n            VERTICAL_BLUR:verticalBlur,\n            AAF_VIDEO_CROP: aaf_video_crop,\n            AAF_VIDEO_POSITION: aaf_video_position,\n            AAF_VIDEO_SCALE: aaf_video_scale,\n            AAF_VIDEO_FLIP: aaf_video_flip,\n            AAF_VIDEO_FLOP: aaf_video_flop\n        };\n    }\n\n\n}\n\n//playing - all sources are active\n//paused - all sources are paused\n//stalled - one or more sources is unable to play\n//ended - all sources have finished playing\n//broken - the render graph is in a broken state\nVideoContext.STATE = {};\nVideoContext.STATE.PLAYING = 0;\nVideoContext.STATE.PAUSED = 1;\nVideoContext.STATE.STALLED = 2;\nVideoContext.STATE.ENDED = 3;\nVideoContext.STATE.BROKEN = 4;\n\n\nVideoContext.visualiseVideoContextTimeline = visualiseVideoContextTimeline;\nVideoContext.visualiseVideoContextGraph = visualiseVideoContextGraph;\nVideoContext.createControlFormForNode = createControlFormForNode;\nVideoContext.createSigmaGraphDataFromRenderGraph = createSigmaGraphDataFromRenderGraph;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/videocontext.js\n **/","//Matthew Shotton, R&D User Experience,© BBC 2015\nimport SourceNode, { SOURCENODESTATE } from \"./sourcenode\";\n\nexport default class VideoNode extends SourceNode {\n    /**\n    * Initialise an instance of a VideoNode.\n    * This should not be called directly, but created through a call to videoContext.createVideoNode();\n    */\n    constructor(src, gl, renderGraph, currentTime, globalPlaybackRate=1.0, sourceOffset=0, preloadTime = 4, attributes = {}){\n        super(src, gl, renderGraph, currentTime);\n        this._preloadTime = preloadTime;\n        this._sourceOffset = sourceOffset;\n        this._globalPlaybackRate = globalPlaybackRate;\n        this._playbackRate = 1.0;\n        this._playbackRateUpdated = true;\n        this._attributes = attributes;\n        this._loopElement = false;\n        this._isElementPlaying = false;\n        if (this._attributes.loop){\n            this._loopElement = this._attributes.loop;\n        }\n    }\n\n    set playbackRate(playbackRate){\n        this._playbackRate = playbackRate;\n        this._playbackRateUpdated = true;\n    }\n\n    set stretchPaused(stretchPaused){\n        super.stretchPaused = stretchPaused;\n        if(this._element){\n            if (this._stretchPaused){\n                this._element.pause();\n            } else{\n                if(this._state === SOURCENODESTATE.playing){\n                    this._element.play();\n                }\n            }    \n        }\n    }\n\n    get stretchPaused(){\n        return this._stretchPaused;\n    }\n\n    get playbackRate(){\n        return this._playbackRate;\n    }\n\n    _load(){\n        super._load();\n        if (this._element !== undefined){\n\n            for (var key in this._attributes) {\n                this._element[key] = this._attributes[key];\n            }\n\n            if (this._element.readyState > 3 && !this._element.seeking){\n                if(this._loopElement === false){\n                    if (this._stopTime === Infinity || this._stopTime == undefined){\n                        this._stopTime = this._startTime + this._element.duration;\n                        this._triggerCallbacks(\"durationchange\", this.duration);\n                    }                \n                }\n                if(this._ready !== true){\n                    this._triggerCallbacks(\"loaded\");\n                    this._playbackRateUpdated = true;\n\n                }\n\n                this._ready = true;\n\n            } else{\n                this._ready = false;\n            }\n            return;\n        }\n        if (this._isResponsibleForElementLifeCycle){\n            this._element = document.createElement(\"video\");\n            this._element.setAttribute(\"crossorigin\", \"anonymous\");\n            this._element.setAttribute(\"webkit-playsinline\", \"\");\n            this._element.src = this._elementURL;\n            this._playbackRateUpdated = true;\n\n            for (let key in this._attributes) {\n                this._element[key] = this._attributes[key];\n            }\n        }\n        this._element.currentTime = this._sourceOffset;\n    }\n\n    _destroy(){\n        super._destroy();\n        if (this._isResponsibleForElementLifeCycle && this._element !== undefined){\n            this._element.src = \"\";\n            this._element = undefined;\n            delete this._element;\n        }\n        this._ready = false;\n    }\n\n    _seek(time){\n        super._seek(time);\n        if (this.state === SOURCENODESTATE.playing || this.state === SOURCENODESTATE.paused){\n            if (this._element === undefined) this._load();\n            let relativeTime = this._currentTime - this._startTime + this._sourceOffset;\n            this._element.currentTime = relativeTime;\n            this._ready = false;\n        }\n        if((this._state === SOURCENODESTATE.sequenced || this._state === SOURCENODESTATE.ended) && this._element !== undefined){\n            this._destroy();\n        }\n    }\n\n    _update(currentTime){\n        //if (!super._update(currentTime)) return false;\n        super._update(currentTime);\n        //check if the video has ended\n        if(this._element !== undefined){\n            if (this._element.ended){\n                this._state = SOURCENODESTATE.ended;\n                this._triggerCallbacks(\"ended\");\n            }\n        }\n\n        if (this._startTime - this._currentTime < this._preloadTime && this._state !== SOURCENODESTATE.waiting && this._state !== SOURCENODESTATE.ended)this._load();\n\n        if (this._state === SOURCENODESTATE.playing){\n            if (this._playbackRateUpdated)\n            {\n                this._element.playbackRate = this._globalPlaybackRate * this._playbackRate;\n                this._playbackRateUpdated = false;\n            }\n            if (!this._isElementPlaying){ \n                this._element.play();\n                if (this._stretchPaused){\n                    this._element.pause();\n                }\n                this._isElementPlaying = true;\n            }\n            return true;\n        } else if (this._state === SOURCENODESTATE.paused){\n            this._element.pause();\n            this._isElementPlaying = false;\n            return true;\n        }\n        else if (this._state === SOURCENODESTATE.ended && this._element !== undefined){\n            this._element.pause();\n            this._isElementPlaying = false;\n            this._destroy();\n            return false;\n        }\n    }\n\n    clearTimelineState(){\n        super.clearTimelineState();\n        if (this._element !== undefined) {\n            this._element.pause();\n            this._isElementPlaying = false;\n        }\n        this._destroy();\n    }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/SourceNodes/videonode.js\n **/","//Matthew Shotton, R&D User Experience,© BBC 2015\nimport { updateTexture, clearTexture, createElementTexutre } from \"../utils.js\";\nimport GraphNode from \"../graphnode\";\n\nlet STATE = {\"waiting\":0, \"sequenced\":1, \"playing\":2, \"paused\":3, \"ended\":4};\n\nexport default class SourceNode extends GraphNode{\n    /**\n    * Initialise an instance of a SourceNode.\n    * This is the base class for other Nodes which generate media to be passed into the processing pipeline.\n    */\n    constructor(src, gl, renderGraph, currentTime){\n        super(gl,renderGraph, [], true);\n        this._element = undefined;\n        this._elementURL = undefined;\n        this._isResponsibleForElementLifeCycle = true;\n        if (typeof src === \"string\"){\n            //create the node from the passed url\n            this._elementURL = src;\n        }else{\n            //use the passed element to create the SourceNode\n            this._element = src;\n            this._isResponsibleForElementLifeCycle = false;\n        }\n\n        this._state = STATE.waiting;\n        this._currentTime = currentTime;\n        this._startTime = NaN;\n        this._stopTime = Infinity;\n        this._ready = false;\n        this._loadCalled = false;\n        this._stretchPaused = false;\n        this._texture = createElementTexutre(gl);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array([0,0,0,0]));\n        this._callbacks = [];\n    }\n\n    /**\n    * Returns the state of the node.\n    * 0 - Waiting, start() has not been called on it yet.\n    * 1 - Sequenced, start() has been called but it is not playing yet. \n    * 2 - Playing, the node is playing.\n    * 3 - Paused, the node is paused.\n    * 4 - Ended, playback of the node has finished.\n    *\n    * @example\n    * var ctx = new VideoContext();\n    * var videoNode = ctx.createVideoSourceNode('video.mp4');\n    * console.log(videoNode.state); //will output 0 (for waiting)\n    * videoNode.start(5);\n    * console.log(videoNode.state); //will output 1 (for sequenced)\n    * videoNode.stop(10);\n    * ctx.play();\n    * console.log(videoNode.state); //will output 2 (for playing)\n    * ctx.paused();\n    * console.log(videoNode.state); //will output 3 (for paused)\n    */\n    get state(){        \n        return this._state;\n    }\n\n\n    /**\n    * Returns the underlying DOM element which represents this source node.\n    * Note: If a source node is created with a url rather than passing in an existing element then this will return undefined until the source node preloads the element.\n    *\n    * @return {Element} The underlying DOM element representing the media for the node. If the lifecycle of the video is owned UNSIGNED_BYTE the node itself, this can return undefined if the element hasn't been loaded yet.\n    *\n    * @example \n    * //Accessing the Element on a VideoNode created via a URL\n    * var ctx = new VideoContext();\n    * var videoNode = ctx.createVideoSourceNode('video.mp4');\n    * videoNode.start(0);\n    * videoNode.stop(5);\n    * //When the node starts playing the element should exist so set it's volume to 0\n    * videoNode.regsiterCallback(\"play\", function(){videoNode.element.volume = 0;});\n    *\n    *\n    * @example \n    * //Accessing the Element on a VideoNode created via an already existing element\n    * var ctx = new VideoContext();\n    * var videoElement = document.createElement(\"video\");\n    * var videoNode = ctx.createVideoSourceNode(videoElement);\n    * videoNode.start(0);\n    * videoNode.stop(5);\n    * //The elemnt can be accessed any time because it's lifecycle is managed outside of the VideoContext\n    * videoNode.element.volume = 0;\n    *\n    */\n    get element(){\n        return this._element;\n    }\n\n\n    /**\n    * Returns the duration of the node on a timeline. If no start time is set will return undefiend, if no stop time is set will return Infinity.\n    *\n    * @return {number} The duration of the node in seconds.\n    *\n    * @example \n    * var ctx = new VideoContext();\n    * var videoNode = ctx.createVideoSourceNode('video.mp4');\n    * videoNode.start(5);\n    * videoNode.stop(10);\n    * console.log(videoNode.duration); //will output 10\n    */\n    get duration(){\n        if (isNaN(this._startTime)) return undefined;\n        if (this._stopTime === Infinity) return Infinity;\n        return this._stopTime - this._startTime;\n    }\n\n    set stretchPaused(stretchPaused){\n        this._stretchPaused = stretchPaused;\n    }\n\n    get stretchPaused(){\n        return this._stretchPaused;\n    }\n\n    _load(){\n        if (!this._loadCalled){\n            this._triggerCallbacks(\"load\");\n            this._loadCalled = true;\n        }\n    }\n\n    _destroy(){\n        this._triggerCallbacks(\"destroy\");\n        this._loadCalled = false;    \n    }\n    \n    /**\n    * Register callbacks against one of these events: \"load\", \"destory\", \"seek\", \"pause\", \"play\", \"ended\", \"durationchange\", \"loaded\"\n    *\n    * @param {String} type - the type of event to register the callback against.\n    * @param {function} func - the function to call.\n    * \n    * @example \n    * var ctx = new VideoContext();\n    * var videoNode = ctx.createVideoSourceNode('video.mp4');\n    *\n    * videoNode.registerCallback(\"load\", function(){\"video is loading\"});\n    * videoNode.registerCallback(\"play\", function(){\"video is playing\"});\n    * videoNode.registerCallback(\"ended\", function(){\"video has eneded\"});\n    *\n    */\n    registerCallback(type, func){\n        this._callbacks.push({type:type, func:func});\n    }\n\n    /**\n    * Remove callback.\n    *\n    * @param {function} [func] - the callback to remove, if undefined will remove all callbacks for this node.\n    *\n    * @example \n    * var ctx = new VideoContext();\n    * var videoNode = ctx.createVideoSourceNode('video.mp4');\n    *\n    * videoNode.registerCallback(\"load\", function(){\"video is loading\"});\n    * videoNode.registerCallback(\"play\", function(){\"video is playing\"});\n    * videoNode.registerCallback(\"ended\", function(){\"video has eneded\"});\n    * videoNode.unregisterCallback(); //remove all of the three callbacks.\n    *\n    */\n    unregisterCallback(func){\n        let toRemove = [];\n        for(let callback of this._callbacks){\n            if (func === undefined){\n                toRemove.push(callback);\n            } else if (callback.func === func){\n                toRemove.push(callback);\n            }\n        }\n        for(let callback of toRemove){\n            let index = this._callbacks.indexOf(callback);\n            this._callbacks.splice(index, 1);\n        }\n    }\n\n    _triggerCallbacks(type, data){\n        for(let callback of this._callbacks){\n            if (callback.type === type){\n                if (data!== undefined){\n                    callback.func(this, data);\n                }else{\n                    callback.func(this);\n                }\n            }\n        }\n    }\n    \n    /**\n    * Start playback at VideoContext.currentTime plus passed time. If passed time is negative, will play as soon as possible.\n    *\n    * @param {number} time - the time from the currentTime of the VideoContext which to start playing, if negative will play as soon as possible.\n    * @return {boolean} Will return true is seqeuncing has succeded, or false if it is already sequenced.\n    */\n    start(time){\n        if (this._state !== STATE.waiting){\n            console.debug(\"SourceNode is has already been sequenced. Can't sequence twice.\");\n            return false;\n        }\n\n        this._startTime = this._currentTime + time;\n        this._state = STATE.sequenced;\n        return true;\n    }\n    \n    /**\n    * Start playback at an absolute time ont the VideoContext's timeline.\n    *\n    * @param {number} time - the time on the VideoContexts timeline to start playing.\n    * @return {boolean} Will return true is seqeuncing has succeded, or false if it is already sequenced.\n    */\n    startAt(time){\n        if (this._state !== STATE.waiting){\n            console.debug(\"SourceNode is has already been sequenced. Can't sequence twice.\");\n            return false;\n        }\n        this._startTime = time;\n        this._state = STATE.sequenced;\n        return true;\n    }\n    \n    /**\n    * Stop playback at VideoContext.currentTime plus passed time. If passed time is negative, will play as soon as possible.\n    *\n    * @param {number} time - the time from the currentTime of the video context which to stop playback.\n    * @return {boolean} Will return true is seqeuncing has succeded, or false if the playback has already ended or if start hasn't been called yet, or if time is less than the start time.\n    */\n    stop(time){\n        if (this._state === STATE.ended){\n            console.debug(\"SourceNode has already ended. Cannot call stop.\");\n            return false;\n        } else if (this._state === STATE.waiting){\n            console.debug(\"SourceNode must have start called before stop is called\");\n            return false;\n        }\n        if (this._currentTime + time <= this._startTime){\n            console.debug(\"SourceNode must have a stop time after it's start time, not before.\");\n            return false;\n        }\n        this._stopTime = this._currentTime + time;\n        this._stretchPaused = false;\n        this._triggerCallbacks(\"durationchange\", this.duration);\n        return true;\n    }\n    \n    /**\n    * Stop playback at an absolute time ont the VideoContext's timeline.\n    *\n    * @param {number} time - the time on the VideoContexts timeline to stop playing.\n    * @return {boolean} Will return true is seqeuncing has succeded, or false if the playback has already ended or if start hasn't been called yet, or if time is less than the start time.\n    */\n    stopAt(time){\n        if (this._state === STATE.ended){\n            console.debug(\"SourceNode has already ended. Cannot call stop.\");\n            return false;\n        } else if (this._state === STATE.waiting){\n            console.debug(\"SourceNode must have start called before stop is called\");\n            return false;\n        }\n        if (time <= this._startTime){\n            console.debug(\"SourceNode must have a stop time after it's start time, not before.\");\n            return false;\n        }\n        this._stopTime = time;\n        this._stretchPaused = false;\n        this._triggerCallbacks(\"durationchange\", this.duration);\n        return true;\n    }\n\n    _seek(time){\n        this._triggerCallbacks(\"seek\", time);\n\n        if (this._state === STATE.waiting) return;\n        if (time < this._startTime){\n            clearTexture(this._gl, this._texture);\n            this._state = STATE.sequenced;\n        }\n        if (time >= this._startTime && this._state !== STATE.paused){\n            this._state = STATE.playing;\n        }\n        if (time >= this._stopTime){\n            clearTexture(this._gl, this._texture);\n            this._triggerCallbacks(\"ended\");\n            this._state = STATE.ended;\n        }\n        //update the current time\n        this._currentTime = time;\n    }\n\n    _pause(){\n        this._triggerCallbacks(\"pause\");\n\n        if(this._state === STATE.playing){\n            this._state = STATE.paused;\n        }\n    }\n    _play(){\n        this._triggerCallbacks(\"play\");\n\n        if(this._state === STATE.paused){\n            this._state = STATE.playing;\n        }\n    }\n\n    _isReady(){\n        if (this._state === STATE.playing || this._state === STATE.paused){\n            return this._ready;\n        }\n        return true;\n    }\n\n    _update(currentTime){\n        this._rendered = true;\n        let timeDelta = currentTime - this._currentTime; \n\n        //update the current time\n        this._currentTime = currentTime;\n\n        //update the state\n        if (this._state === STATE.waiting || this._state === STATE.ended) return false;\n\n        this._triggerCallbacks(\"render\", currentTime);\n\n        \n        if (currentTime < this._startTime){\n            clearTexture(this._gl, this._texture);\n            this._state = STATE.sequenced;\n        }\n        \n        if (currentTime >= this._startTime && this._state !== STATE.paused){\n            if (this._state !== STATE.playing)this._triggerCallbacks(\"play\");\n            this._state = STATE.playing;\n        }\n\n        if (currentTime >= this._stopTime){\n            clearTexture(this._gl, this._texture);\n            this._triggerCallbacks(\"ended\");\n            this._state = STATE.ended;\n        }\n\n        //update this source nodes texture\n        if (this._element === undefined || this._ready === false) return true;      \n        \n        if(this._state === STATE.playing){\n            updateTexture(this._gl, this._texture, this._element);\n            if(this._stretchPaused){\n                this._stopTime += timeDelta;\n            }\n        }\n\n        return true;\n    }\n\n    /**\n    * Clear any timeline state the node currently has, this puts the node in the \"waiting\" state, as if neither start nor stop had been called.\n    */\n    clearTimelineState(){\n        this._startTime = NaN;\n        this._stopTime = Infinity;\n        this._state = STATE.waiting;\n    }\n}\n\nexport {STATE as SOURCENODESTATE};\n\n\n/** WEBPACK FOOTER **\n ** ./src/SourceNodes/sourcenode.js\n **/","//Matthew Shotton, R&D User Experience,© BBC 2015\n\n/*\n* Utility function to compile a WebGL Vertex or Fragment shader.\n* \n* @param {WebGLRenderingContext} gl - the webgl context fo which to build the shader.\n* @param {String} shaderSource - A string of shader code to compile.\n* @param {number} shaderType - Shader type, either WebGLRenderingContext.VERTEX_SHADER or WebGLRenderingContext.FRAGMENT_SHADER.\n*\n* @return {WebGLShader} A compiled shader.\n*\n*/\nexport function compileShader(gl, shaderSource, shaderType) {\n    let shader = gl.createShader(shaderType);\n    gl.shaderSource(shader, shaderSource);\n    gl.compileShader(shader);\n    let success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (!success) {\n        throw \"could not compile shader:\" + gl.getShaderInfoLog(shader);\n    }\n    return shader;\n}\n\n/*\n* Create a shader program from a passed vertex and fragment shader source string.\n* \n* @param {WebGLRenderingContext} gl - the webgl context fo which to build the shader.\n* @param {String} vertexShaderSource - A string of vertex shader code to compile.\n* @param {String} fragmentShaderSource - A string of fragment shader code to compile.\n*\n* @return {WebGLProgram} A compiled & linkde shader program.\n*/\nexport function createShaderProgram(gl, vertexShaderSource, fragmentShaderSource){\n    let vertexShader = compileShader(gl, vertexShaderSource, gl.VERTEX_SHADER);\n    let fragmentShader = compileShader(gl, fragmentShaderSource, gl.FRAGMENT_SHADER);\n    let program = gl.createProgram();\n\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n   \n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)){\n        throw {\"error\":4,\"msg\":\"Can't link shader program for track\", toString:function(){return this.msg;}};\n    }\n    return program;\n}\n\nexport function createElementTexutre(gl){\n    let texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    // Set the parameters so we can render any size image.\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    //Initialise the texture untit to clear.\n    //gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, type);\n\n    return texture;\n}\n\nexport function updateTexture(gl, texture, element){\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, element);\n}\n\nexport function clearTexture(gl, texture){\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array([0,0,0,0]));\n}\n\nexport function createControlFormForNode(node, nodeName){\n    let rootDiv = document.createElement(\"div\");\n    \n    if (nodeName !== undefined){\n        var title = document.createElement(\"h2\");\n        title.innerHTML = nodeName;\n        rootDiv.appendChild(title);\n    }\n\n    for(let propertyName in node._properties){\n        let propertyParagraph = document.createElement(\"p\");\n        let propertyTitleHeader = document.createElement(\"h3\");\n        propertyTitleHeader.innerHTML = propertyName;\n        propertyParagraph.appendChild(propertyTitleHeader);\n\n        let propertyValue = node._properties[propertyName].value;\n        if (typeof propertyValue === \"number\"){\n            let range = document.createElement(\"input\");\n            range.setAttribute(\"type\", \"range\");\n            range.setAttribute(\"min\", \"0\");\n            range.setAttribute(\"max\", \"1\");\n            range.setAttribute(\"step\", \"0.01\");\n            range.setAttribute(\"value\", propertyValue,toString());\n            \n            let number = document.createElement(\"input\");\n            number.setAttribute(\"type\", \"number\");\n            number.setAttribute(\"min\", \"0\");\n            number.setAttribute(\"max\", \"1\");\n            number.setAttribute(\"step\", \"0.01\");\n            number.setAttribute(\"value\", propertyValue,toString());\n\n            let mouseDown = false;\n            range.onmousedown =function(){mouseDown=true;};\n            range.onmouseup =function(){mouseDown=false;};\n            range.onmousemove = function(){\n                if(mouseDown){\n                    node[propertyName] = parseFloat(range.value);\n                    number.value = range.value;\n                }\n            };\n            range.onchange = function(){\n                node[propertyName] = parseFloat(range.value); \n                number.value = range.value;     \n            };\n            number.onchange =function(){\n                node[propertyName] = parseFloat(number.value); \n                range.value = number.value;\n            };\n            propertyParagraph.appendChild(range);\n            propertyParagraph.appendChild(number);\n        }\n        else if(Object.prototype.toString.call(propertyValue) === \"[object Array]\"){\n            for (var i = 0; i < propertyValue.length; i++) {\n                let range = document.createElement(\"input\");\n                range.setAttribute(\"type\", \"range\");\n                range.setAttribute(\"min\", \"0\");\n                range.setAttribute(\"max\", \"1\");\n                range.setAttribute(\"step\", \"0.01\");\n                range.setAttribute(\"value\", propertyValue[i],toString());\n\n                let number = document.createElement(\"input\");\n                number.setAttribute(\"type\", \"number\");\n                number.setAttribute(\"min\", \"0\");\n                number.setAttribute(\"max\", \"1\");\n                number.setAttribute(\"step\", \"0.01\");\n                number.setAttribute(\"value\", propertyValue,toString());\n\n                let index = i;\n                let mouseDown = false;\n                range.onmousedown =function(){mouseDown=true;};\n                range.onmouseup =function(){mouseDown=false;};\n                range.onmousemove = function(){\n                    if(mouseDown){\n                        node[propertyName][index] = parseFloat(range.value);\n                        number.value = range.value;\n                    }\n                };\n                range.onchange = function(){\n                    node[propertyName][index] = parseFloat(range.value);\n                    number.value = range.value;\n                };\n\n                number.onchange = function(){\n                    node[propertyName][index] = parseFloat(number.value); \n                    range.value = number.value;\n                };\n                propertyParagraph.appendChild(range);\n                propertyParagraph.appendChild(number);\n            }\n        }\n\n        rootDiv.appendChild(propertyParagraph);\n    }\n    return rootDiv;\n}\n\n\nfunction calculateNodeDepthFromDestination(videoContext){\n    let destination = videoContext.destination;\n    let depthMap= new Map();\n    depthMap.set(destination, 0);\n\n    function itterateBackwards(node, depth=0){\n        for (let n of node.inputs){\n            let d = depth + 1;\n            if (depthMap.has(n)){\n                if (d > depthMap.get(n)){\n                    depthMap.set(n, d);\n                }\n            } else{\n                depthMap.set(n,d);\n            }\n            itterateBackwards(n, depthMap.get(n));\n        }\n    }\n\n    itterateBackwards(destination);\n    return depthMap;\n}\n\n\n\n\nexport function visualiseVideoContextGraph(videoContext, canvas){\n    let ctx = canvas.getContext(\"2d\");\n    let w = canvas.width;\n    let h = canvas.height;\n    ctx.clearRect(0,0,w,h);\n\n    let nodeDepths = calculateNodeDepthFromDestination(videoContext);\n    let depths = nodeDepths.values();\n    depths = Array.from(depths).sort(function(a, b){return b-a;});\n    let maxDepth = depths[0];\n\n    let xStep = w / (maxDepth+1);\n\n    let nodeHeight = (h / videoContext._sourceNodes.length)/3;\n    let nodeWidth = nodeHeight * 1.618;\n\n\n    function calculateNodePos(node, nodeDepths, xStep, nodeHeight){\n        let depth = nodeDepths.get(node);\n        nodeDepths.values();\n  \n        let count = 0;\n        for(let nodeDepth of nodeDepths){\n            if (nodeDepth[0] === node) break;\n            if (nodeDepth[1] === depth) count += 1;\n        }\n        return {x:(xStep*nodeDepths.get(node)), y:nodeHeight*1.5*count + 50};\n    }\n\n\n    // \"video\":[\"#572A72\", \"#3C1255\"],\n    // \"image\":[\"#7D9F35\", \"#577714\"],\n    // \"canvas\":[\"#AA9639\", \"#806D15\"]\n\n    for (let i = 0; i < videoContext._renderGraph.connections.length; i++) {\n        let conn = videoContext._renderGraph.connections[i];\n        let source = calculateNodePos(conn.source, nodeDepths, xStep, nodeHeight);\n        let destination = calculateNodePos(conn.destination, nodeDepths, xStep, nodeHeight);\n        if (source !== undefined && destination !== undefined){\n            ctx.beginPath();\n            //ctx.moveTo(source.x + nodeWidth/2, source.y + nodeHeight/2);\n            let x1 = source.x + nodeWidth/2;\n            let y1 = source.y + nodeHeight/2;\n            let x2 = destination.x + nodeWidth/2;\n            let y2 = destination.y + nodeHeight/2;\n            let dx = x2 - x1;\n            let dy = y2 - y1;\n\n            let angle = Math.PI/2 - Math.atan2(dx,dy); \n\n            let distance = Math.sqrt(Math.pow(x1-x2,2) + Math.pow(y1-y2,2));\n\n            let midX = Math.min(x1, x2) + (Math.max(x1,x2) - Math.min(x1, x2))/2;\n            let midY = Math.min(y1, y2) + (Math.max(y1,y2) - Math.min(y1, y2))/2;\n\n            let testX = (Math.cos(angle + Math.PI/2))*distance/1.5 + midX;\n            let testY = (Math.sin(angle + Math.PI/2))*distance/1.5 + midY;\n            // console.log(testX, testY);\n\n            ctx.arc(testX, testY, distance/1.2, angle-Math.PI+0.95, angle-0.95);\n\n            //ctx.arcTo(source.x + nodeWidth/2 ,source.y + nodeHeight/2,destination.x + nodeWidth/2,destination.y + nodeHeight/2,100);\n            //ctx.lineTo(midX, midY);\n            ctx.stroke();\n            //ctx.endPath();\n        }\n    }\n\n\n    for(let node of nodeDepths.keys()){\n        let pos = calculateNodePos(node, nodeDepths, xStep, nodeHeight);\n        let color = \"#AA9639\";\n        let text = \"\";\n        if (node.constructor.name === \"CompositingNode\"){\n            color = \"#000000\";\n        }\n        if (node.constructor.name === \"DestinationNode\"){\n            color = \"#7D9F35\";\n            text=\"Output\";\n        }\n        if (node.constructor.name === \"VideoNode\"){\n            color = \"#572A72\";\n            text = \"Video\";\n        }\n        if (node.constructor.name === \"CanvasNode\"){\n            color = \"#572A72\";\n            text = \"Canvas\"; \n        }\n        if (node.constructor.name === \"ImageNode\"){\n            color = \"#572A72\";\n            text = \"Image\";\n        }\n        ctx.beginPath();\n        ctx.fillStyle = color;\n        ctx.fillRect(pos.x, pos.y, nodeWidth, nodeHeight);\n        ctx.fill();\n\n\n        ctx.fillStyle = \"#000\";\n        ctx.textAlign = \"center\";\n        ctx.font = \"10px Arial\";\n        ctx.fillText(text,pos.x+nodeWidth/2, pos.y+nodeHeight/2+2.5);\n        ctx.fill();\n    }\n\n    return;\n}\n\n\n\n\nexport function createSigmaGraphDataFromRenderGraph(videoContext){\n\n    function idForNode(node){\n        if (videoContext._sourceNodes.indexOf(node) !== -1){\n            let id = \"source \" + node.constructor.name+ \" \"+videoContext._sourceNodes.indexOf(node);\n            return id;    \n        }\n        let id = \"processor \" + node.constructor.name + \" \"+videoContext._processingNodes.indexOf(node);\n        return id;\n    }\n\n    let graph = {\n        nodes:[\n            {\n                id: idForNode(videoContext.destination),\n                label:\"Destination Node\",\n                x:2.5,\n                y:0.5,\n                size:2,\n                node: videoContext.destination\n            }],\n        edges:[]\n    };\n\n    for (let i = 0; i < videoContext._sourceNodes.length; i++) {\n        let sourceNode = videoContext._sourceNodes[i];\n        let y = i * (1.0 / videoContext._sourceNodes.length);\n        graph.nodes.push({\n            id: idForNode(sourceNode),\n            label:\"Source \"+ i.toString(),\n            x:0,\n            y: y,\n            size:2,\n            color:\"#572A72\",\n            node:sourceNode\n        });\n    }\n    for (let i = 0; i < videoContext._processingNodes.length; i++) {\n        let processingNode = videoContext._processingNodes[i];\n        graph.nodes.push({\n            id: idForNode(processingNode),\n            x: Math.random() *2.5,\n            y: Math.random(),\n            size:2,\n            node: processingNode\n        });\n    }\n\n    for (let i = 0; i < videoContext._renderGraph.connections.length; i++) {\n        let conn = videoContext._renderGraph.connections[i];\n        graph.edges.push({\n            \"id\":\"e\"+i.toString(),\n            \"source\": idForNode(conn.source),\n            \"target\": idForNode(conn.destination)\n        });\n    }\n\n\n\n    return graph;\n}\n\nexport function visualiseVideoContextTimeline(videoContext, canvas, currentTime){\n    let ctx = canvas.getContext(\"2d\");\n    let w = canvas.width;\n    let h = canvas.height;\n    let trackHeight = h / videoContext._sourceNodes.length;\n    let playlistDuration = videoContext.duration;\n\n    if (currentTime > playlistDuration && !videoContext.endOnLastSourceEnd) playlistDuration = currentTime;\n\n    if (videoContext.duration === Infinity){\n        let total = 0;\n        for (let i = 0; i < videoContext._sourceNodes.length; i++) {\n            let sourceNode = videoContext._sourceNodes[i];\n            if(sourceNode._stopTime !== Infinity) total += sourceNode._stopTime;\n        }\n        \n        if (total > videoContext.currentTime){\n            playlistDuration = total+5;\n        }else{\n            playlistDuration = videoContext.currentTime+5;\n        }\n    }\n    let pixelsPerSecond = w / playlistDuration;\n    let mediaSourceStyle = {\n        \"video\":[\"#572A72\", \"#3C1255\"],\n        \"image\":[\"#7D9F35\", \"#577714\"],\n        \"canvas\":[\"#AA9639\", \"#806D15\"]\n    };\n\n\n    ctx.clearRect(0,0,w,h);\n    ctx.fillStyle = \"#999\";\n    \n    for(let node of videoContext._processingNodes){\n        if (node.constructor.name !== \"TransitionNode\") continue;\n        for(let propertyName in node._transitions){\n            for(let transition of node._transitions[propertyName]){\n                let tW = (transition.end - transition.start) * pixelsPerSecond;\n                let tH = h;\n                let tX = transition.start * pixelsPerSecond;\n                let tY = 0;\n                ctx.fillStyle = \"rgba(0,0,0, 0.3)\";\n                ctx.fillRect(tX, tY, tW, tH);\n                ctx.fill();\n            }\n        }\n    }\n\n\n    for (let i = 0; i < videoContext._sourceNodes.length; i++) {\n        let sourceNode = videoContext._sourceNodes[i];\n        let duration = sourceNode._stopTime - sourceNode._startTime;\n        if(duration=== Infinity) duration = videoContext.currentTime;\n        let start = sourceNode._startTime;\n\n        let msW = duration * pixelsPerSecond;\n        let msH = trackHeight;\n        let msX = start * pixelsPerSecond;\n        let msY = trackHeight * i;\n        ctx.fillStyle = mediaSourceStyle.video[i%mediaSourceStyle.video.length];\n\n\n        ctx.fillRect(msX,msY,msW,msH);\n        ctx.fill();\n    }\n\n    \n\n    if (currentTime !== undefined){\n        ctx.fillStyle = \"#000\";\n        ctx.fillRect(currentTime*pixelsPerSecond, 0, 1, h);\n    }\n}\n\n\n\n\nexport class UpdateablesManager{\n    constructor(){\n        this._updateables = [];\n        this._useWebworker = false;\n        this._active = false;\n        this._previousRAFTime = undefined;\n        this._previousWorkerTime = undefined;\n\n        this._webWorkerString = \"\\\n            var running = false;\\\n            function tick(){\\\n                postMessage(Date.now());\\\n                if (running){\\\n                    setTimeout(tick, 1000/20);\\\n                }\\\n            }\\\n            self.addEventListener('message',function(msg){\\\n                var data = msg.data;\\\n                if (data === 'start'){\\\n                    running = true;\\\n                    tick();\\\n                }\\\n                if (data === 'stop') running = false;\\\n            });\";\n        this._webWorker = undefined;\n    }\n\n    _initWebWorker(){\n        window.URL = window.URL || window.webkitURL;\n        let blob = new Blob([this._webWorkerString], {type: \"application/javascript\"});\n        this._webWorker = new Worker(URL.createObjectURL(blob));\n        this._webWorker.onmessage = (msg)=>{\n            let time = msg.data;\n            this._updateWorkerTime(time);\n        };\n    }\n\n    _lostVisibility(){\n        this._previousWorkerTime = Date.now();\n        this._useWebworker = true;\n        if (!this._webWorker){\n            this._initWebWorker();\n        }\n        this._webWorker.postMessage(\"start\");\n    }\n\n    _gainedVisibility(){\n        this._useWebworker = false;\n        this._previousRAFTime = undefined;\n        if(this._webWorker) this._webWorker.postMessage(\"stop\");\n        requestAnimationFrame(this._updateRAFTime.bind(this));\n    }\n\n    _init(){\n        if(!window.Worker)return;\n\n        //If page visibility API not present fallback to using \"focus\" and \"blur\" event listeners.\n        if (typeof document.hidden === \"undefined\") {\n            window.addEventListener(\"focus\", this._gainedVisibility.bind(this));\n            window.addEventListener(\"blur\", this._lostVisibility.bind(this));\n            return;\n        }\n        //Otherwise we can use the visibility API to do the loose/gain focus properly\n        document.addEventListener(\"visibilitychange\", ()=>{\n            if (document.hidden === true) {\n                this._lostVisibility();\n            } else {\n                this._gainedVisibility();\n            }\n        }, false);\n\n        requestAnimationFrame(this._updateRAFTime.bind(this));\n    }\n\n    _updateWorkerTime(time){\n        let dt = (time - this._previousWorkerTime) / 1000;\n        if (dt !== 0) this._update(dt);\n        this._previousWorkerTime = time;\n    }\n\n    _updateRAFTime(time){\n        if (this._previousRAFTime === undefined)this._previousRAFTime = time;\n        let dt = (time - this._previousRAFTime) / 1000;\n        if (dt !== 0) this._update(dt);\n        this._previousRAFTime = time;\n        if(!this._useWebworker)requestAnimationFrame(this._updateRAFTime.bind(this));\n    }\n\n    _update(dt){\n        for(let i = 0; i < this._updateables.length; i++){\n            this._updateables[i]._update(parseFloat(dt));\n\n        }\n    }\n\n    register(updateable){\n        this._updateables.push(updateable);\n        if (this._active === false){\n            this._active = true;\n            this._init();\n        }\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils.js\n **/","//Matthew Shotton, R&D User Experience,© BBC 2015\nexport default class GraphNode {\n    /**\n    * Base class from which all processing and source nodes are derrived.\n    */\n    constructor(gl, renderGraph, inputNames, limitConnections=false){\n        this._renderGraph = renderGraph;\n        this._limitConnections = limitConnections;\n        this._inputNames = inputNames;\n\n        //Setup WebGL output texture\n        this._gl = gl;\n        this._renderGraph = renderGraph;\n        this._rendered =false;\n    }\n\n    /**\n    * Get the names of the inputs to this node.\n    *\n    * @return {String[]} An array of the names of the inputs ot the node.\n    */    \n    get inputNames(){\n        return this._inputNames.slice();\n    }\n\n    /**\n    * The maximum number of connections that can be made to this node. If there is not limit this will return Infinity.\n    *\n    * @return {number} The number of connections which can be made to this node.\n    */\n    get maximumConnections(){\n        if (this._limitConnections ===false) return Infinity;\n        return this._inputNames.length;\n    }\n\n    /**\n    * Get an array of all the nodes which connect to this node.\n    *\n    * @return {GraphNode[]} An array of nodes which connect to this node.\n    */\n    get inputs(){\n        let result = this._renderGraph.getInputsForNode(this);\n        result = result.filter(function(n){return n !== undefined;});\n        return result;\n    }\n    \n    /**\n    * Get an array of all the nodes which this node outputs to.\n    *\n    * @return {GraphNode[]} An array of nodes which this node connects to.\n    */\n    get outputs(){\n        return this._renderGraph.getOutputsForNode(this);\n    }\n\n\n    /**\n    * Connect this node to the targetNode\n    * \n    * @param {GraphNode} targetNode - the node to connect.\n    * @param {(number| String)} [targetPort] - the port on the targetNode to connect to, this can be an index, a string identifier, or undefined (in which case the next available port will be connected to).\n    * \n    */\n    connect(targetNode, targetPort){\n        return (this._renderGraph.registerConnection(this, targetNode, targetPort));\n    }\n    \n    /**\n    * Disconnect this node from the targetNode. If targetNode is undefind remove all out-bound connections.\n    *\n    * @param {GraphNode} [targetNode] - the node to disconnect from. If undefined, disconnect from all nodes.\n    *\n    */\n    disconnect(targetNode){\n        if (targetNode === undefined){\n            let toRemove = this._renderGraph.getOutputsForNode(this);\n            toRemove.forEach((target) => this._renderGraph.unregisterConnection(this, target));\n            if (toRemove.length > 0) return true;\n            return false;\n        }\n        return this._renderGraph.unregisterConnection(this, targetNode);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/graphnode.js\n **/","//Matthew Shotton, R&D User Experience,© BBC 2015\nimport SourceNode, { SOURCENODESTATE } from \"./sourcenode\";\n\nexport default class ImageNode extends SourceNode {\n    /**\n    * Initialise an instance of an ImageNode.\n    * This should not be called directly, but created through a call to videoContext.createImageNode();\n    */\n    constructor(src, gl, renderGraph, currentTime, preloadTime = 4){\n        super(src, gl, renderGraph, currentTime);\n        this._preloadTime = preloadTime;\n    }\n\n    _load(){\n\n        if (this._element !== undefined){\n            return;\n        }\n        if (this._isResponsibleForElementLifeCycle){\n            super._load();\n            this._element = new Image();\n            this._element.setAttribute(\"crossorigin\", \"anonymous\");\n            this._element.src = this._elementURL;\n            this._element.onload = () => {\n                this._ready = true;\n                this._triggerCallbacks(\"loaded\");\n            };\n            this._element.onerror = () => {\n                console.error(\"ImageNode failed to load url:\", this._elementURL);\n            };\n        }\n    }\n\n    _destroy(){\n        super._destroy();\n        if (this._isResponsibleForElementLifeCycle){\n            this._element.src = \"\";\n            this._element = undefined;    \n            delete this._element;\n        }\n        this._ready = false;\n    }\n\n    _seek(time){\n        super._seek(time);\n        if (this.state === SOURCENODESTATE.playing || this.state === SOURCENODESTATE.paused){\n            if (this._element === undefined) this._load();\n            this._ready = false;\n        }\n        if((this._state === SOURCENODESTATE.sequenced || this._state === SOURCENODESTATE.ended) && this._element !== undefined){\n            this._destroy();\n        }\n    }\n\n    _update(currentTime){\n        //if (!super._update(currentTime)) return false;\n        super._update(currentTime);\n        if (this._startTime - this._currentTime < this._preloadTime && this._state !== SOURCENODESTATE.waiting && this._state !== SOURCENODESTATE.ended)this._load();\n\n        if (this._state === SOURCENODESTATE.playing){\n            return true;\n        } else if (this._state === SOURCENODESTATE.paused){\n            return true;\n        }\n        else if (this._state === SOURCENODESTATE.ended && this._element !== undefined){\n            this._destroy();\n            return false;\n        }\n\n    }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/SourceNodes/imagenode.js\n **/","//Matthew Shotton, R&D User Experience,© BBC 2015\nimport SourceNode, { SOURCENODESTATE } from \"./sourcenode\";\n\nexport default class CanvasNode extends SourceNode {\n    /**\n    * Initialise an instance of a CanvasNode.\n    * This should not be called directly, but created through a call to videoContext.createCanvasNode();\n    */\n    constructor(canvas, gl, renderGraph, currentTime, preloadTime = 4){\n        super(canvas, gl, renderGraph, currentTime);\n        this._preloadTime = preloadTime;\n    }\n\n    _load(){\n        super._load();\n        this._ready = true;\n        this._triggerCallbacks(\"loaded\");        \n    }\n\n    _destroy(){\n        super._destroy();\n        this._ready = false;\n    }\n\n    _seek(time){\n        super._seek(time);\n        if (this.state === SOURCENODESTATE.playing || this.state === SOURCENODESTATE.paused){\n            if (this._element === undefined) this._load();\n            this._ready = false;\n        }\n        if((this._state === SOURCENODESTATE.sequenced || this._state === SOURCENODESTATE.ended) && this._element !== undefined){\n            this._destroy();\n        }\n    }\n    \n    _update(currentTime){\n        //if (!super._update(currentTime)) return false;\n        super._update(currentTime);\n        if (this._startTime - this._currentTime < this._preloadTime && this._state !== SOURCENODESTATE.waiting && this._state !== SOURCENODESTATE.ended)this._load();\n\n        if (this._state === SOURCENODESTATE.playing){\n            return true;\n        } else if (this._state === SOURCENODESTATE.paused){\n            return true;\n        }\n        else if (this._state === SOURCENODESTATE.ended && this._element !== undefined){\n            this._destroy();\n            return false;\n        }\n\n    }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/SourceNodes/canvasnode.js\n **/","//Matthew Shotton, R&D User Experience,© BBC 2015\nimport ProcessingNode from \"./processingnode\";\nimport { createElementTexutre } from \"../utils.js\";\n\nexport default class CompositingNode extends ProcessingNode{\n    /**\n    * Initialise an instance of a Compositing Node. You should not instantiate this directly, but use VideoContest.createCompositingNode().\n    */\n    constructor(gl, renderGraph, definition){\n        let placeholderTexture = createElementTexutre(gl);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array([0,0,0,0]));\n        super(gl, renderGraph, definition, definition.inputs, false);\n        this._placeholderTexture = placeholderTexture;\n    }\n\n    _render(){\n        let gl = this._gl;        \n        gl.bindFramebuffer(gl.FRAMEBUFFER, this._framebuffer);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this._texture,0);\n        gl.clearColor(0, 0, 0, 0); // green;\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n        this.inputs.forEach((node) => {\n            if (node === undefined)return;\n            super._render();\n\n            //map the input textures input the node\n            var texture = node._texture;\n            let textureOffset = 0;\n\n            for(let mapping of this._inputTextureUnitMapping ){\n                gl.activeTexture(mapping.textureUnit);\n                let textureLocation = gl.getUniformLocation(this._program, mapping.name);\n                gl.uniform1i(textureLocation, this._parameterTextureCount + textureOffset);\n                textureOffset += 1;\n                gl.bindTexture(gl.TEXTURE_2D, texture);\n            }\n\n            gl.drawArrays(gl.TRIANGLES, 0, 6);\n        });\n        \n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/ProcessingNodes/compositingnode.js\n **/","//Matthew Shotton, R&D User Experience,© BBC 2015\nimport GraphNode from \"../graphnode\";\nimport { createShaderProgram, createElementTexutre, updateTexture } from \"../utils.js\";\nimport { RenderException } from \"../exceptions.js\";\n\nexport default class ProcessingNode extends GraphNode{\n    /**\n    * Initialise an instance of a ProcessingNode.\n    *\n    * This class is not used directly, but is extended to create CompositingNodes, TransitionNodes, and EffectNodes.\n    */\n    constructor(gl, renderGraph, definition, inputNames, limitConnections){\n        super(gl, renderGraph, inputNames, limitConnections);\n        this._vertexShader = definition.vertexShader;\n        this._fragmentShader = definition.fragmentShader;\n        this._properties = {};//definition.properties;\n        //copy definition properties\n        for(let propertyName in definition.properties){\n            let propertyValue = definition.properties[propertyName].value;\n            //if an array then shallow copy it\n            if(Object.prototype.toString.call(propertyValue) === \"[object Array]\"){\n                propertyValue = definition.properties[propertyName].value.slice();\n            }\n            let propertyType = definition.properties[propertyName].type;\n            this._properties[propertyName] = {type:propertyType, value:propertyValue};\n        }\n\n        this._inputTextureUnitMapping =[];\n        this._maxTextureUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n        this._boundTextureUnits = 0;\n        this._parameterTextureCount = 0;\n        this._inputTextureCount = 0;\n        this._texture = createElementTexutre(gl);\n        gl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, gl.canvas.width, gl.canvas.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n        //compile the shader\n        this._program = createShaderProgram(gl, this._vertexShader, this._fragmentShader);\n\n        //create and setup the framebuffer\n        this._framebuffer = gl.createFramebuffer();\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this._framebuffer);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this._texture,0);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n        //create properties on this object for the passed properties\n        for (let propertyName in this._properties){\n            Object.defineProperty(this, propertyName, {\n                get:function(){return this._properties[propertyName].value;},\n                set:function(passedValue){this._properties[propertyName].value = passedValue;}\n            });\n        }\n\n        //create texutres for any texture properties\n        for (let propertyName in this._properties){\n            let propertyValue = this._properties[propertyName].value;\n            if (propertyValue instanceof Image){\n                this._properties[propertyName].texture = createElementTexutre(gl);\n                this._properties[propertyName].texutreUnit = gl.TEXTURE0 + this._boundTextureUnits;\n                this._boundTextureUnits += 1;\n                this._parameterTextureCount +=1;\n                if (this._boundTextureUnits > this._maxTextureUnits){\n                    throw new RenderException(\"Trying to bind more than available textures units to shader\");\n                }\n            }\n        }\n\n        //calculate texutre units for input textures\n        for(let inputName of definition.inputs){\n            this._inputTextureUnitMapping.push({name:inputName, textureUnit:gl.TEXTURE0 + this._boundTextureUnits});\n            this._boundTextureUnits += 1;\n            this._inputTextureCount += 1;\n            if (this._boundTextureUnits > this._maxTextureUnits){\n                throw new RenderException(\"Trying to bind more than available textures units to shader\");\n            }\n        }\n\n\n        //find the locations of the properties in the compiled shader\n        for (let propertyName in this._properties){\n            if (this._properties[propertyName].type === \"uniform\"){\n                this._properties[propertyName].location = this._gl.getUniformLocation(this._program, propertyName);\n            }\n        }\n        this._currentTimeLocation = this._gl.getUniformLocation(this._program, \"currentTime\");\n        this._currentTime = 0;\n\n\n        //Other setup\n        let positionLocation = gl.getAttribLocation(this._program, \"a_position\");\n        let buffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.enableVertexAttribArray(positionLocation);\n        gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\n        gl.bufferData(\n            gl.ARRAY_BUFFER,\n            new Float32Array([\n                1.0, 1.0,\n                0.0, 1.0,\n                1.0, 0.0,\n                1.0, 0.0,\n                0.0, 1.0,\n                0.0, 0.0]),\n            gl.STATIC_DRAW);\n        let texCoordLocation = gl.getAttribLocation(this._program, \"a_texCoord\");\n        gl.enableVertexAttribArray(texCoordLocation);\n        gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n\n        //console.log(gl.getUniformLocation(this._program, \"u_image\"));\n    }\n\n    _update(currentTime){\n        this._currentTime = currentTime;\n    }\n\n    _seek(currentTime){\n        this._currentTime = currentTime;\n    }\n\n    _render(){\n        this._rendered = true;\n        let gl = this._gl;\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n\n        gl.useProgram(this._program);\n\n        //upload the default uniforms\n        //gl.uniform1fv(this._currentTimeLocation, this._currentTime);\n\n        //upload/update the custom uniforms\n        let textureOffset = 0;\n\n        for (let propertyName in this._properties){\n            let propertyValue = this._properties[propertyName].value;\n            let propertyType = this._properties[propertyName].type;\n            let propertyLocation = this._properties[propertyName].location;\n            if (propertyType !== \"uniform\") continue;\n\n            if (typeof propertyValue === \"number\"){\n                gl.uniform1f(propertyLocation, propertyValue);\n            }\n            else if( Object.prototype.toString.call(propertyValue) === \"[object Array]\"){\n                if(propertyValue.length === 1){\n                    gl.uniform1fv(propertyLocation, propertyValue);\n                } else if(propertyValue.length === 2){\n                    gl.uniform2fv(propertyLocation, propertyValue);\n                } else if(propertyValue.length === 3){\n                    gl.uniform3fv(propertyLocation, propertyValue);\n                } else if(propertyValue.length === 4){\n                    gl.uniform4fv(propertyLocation, propertyValue);\n                } else{\n                    console.debug(\"Shader parameter\", propertyName, \"is too long an array:\", propertyValue);\n                }\n            } else if(propertyValue instanceof Image){\n                let texture =  this._properties[propertyName].texture;\n                let textureUnit = this._properties[propertyName].texutreUnit;\n                updateTexture(gl, texture, propertyValue);\n\n                gl.activeTexture(textureUnit);\n                gl.uniform1i(propertyLocation, textureOffset);\n                textureOffset += 1;\n                gl.bindTexture(gl.TEXTURE_2D, texture);\n            }\n            else{\n                //TODO - add tests for textures\n                /*gl.activeTexture(gl.TEXTURE0 + textureOffset);\n                gl.uniform1i(parameterLoctation, textureOffset);\n                gl.bindTexture(gl.TEXTURE_2D, textures[textureOffset-1]);*/\n            }\n        }\n\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/ProcessingNodes/processingnode.js\n **/","//Matthew Shotton, R&D User Experience,© BBC 2015\nexport function ConnectException(message){\n    this.message = message;\n    this.name = \"ConnectionException\";\n}\n\nexport function RenderException(message){\n    this.message = message;\n    this.name = \"RenderException\";\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/exceptions.js\n **/","//Matthew Shotton, R&D User Experience,© BBC 2015\nimport ProcessingNode from \"../ProcessingNodes/processingnode\";\n\nexport default class DestinationNode extends ProcessingNode {\n    /**\n    * Initialise an instance of a DestinationNode. \n    *\n    * There should only be a single instance of a DestinationNode per VideoContext instance. An VideoContext's destination can be accessed like so: videoContext.desitnation.\n    * \n    * You should not instantiate this directly.\n    */\n    constructor(gl, renderGraph){        \n  \n        let vertexShader = \"\\\n            attribute vec2 a_position;\\\n            attribute vec2 a_texCoord;\\\n            varying vec2 v_texCoord;\\\n            void main() {\\\n                gl_Position = vec4(vec2(2.0,2.0)*a_position-vec2(1.0, 1.0), 0.0, 1.0);\\\n                v_texCoord = a_texCoord;\\\n            }\";\n\n        let fragmentShader = \"\\\n            precision mediump float;\\\n            uniform sampler2D u_image;\\\n            varying vec2 v_texCoord;\\\n            varying float v_progress;\\\n            void main(){\\\n                gl_FragColor = texture2D(u_image, v_texCoord);\\\n            }\";\n\n        let deffinition = {fragmentShader:fragmentShader, vertexShader:vertexShader, properties:{}, inputs:[\"u_image\"]};\n\n        super(gl, renderGraph, deffinition, deffinition.inputs, false);\n    }\n\n    _render(){\n        let gl = this._gl;        \n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.BLEND);\n        gl.clearColor(0, 0, 0, 0.0); // green;\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        this.inputs.forEach((node)=>{\n            super._render();\n            //map the input textures input the node\n            var texture = node._texture;\n            let textureOffset = 0;\n\n            for(let mapping of this._inputTextureUnitMapping ){\n                gl.activeTexture(mapping.textureUnit);\n                let textureLocation = gl.getUniformLocation(this._program, mapping.name);\n                gl.uniform1i(textureLocation, this._parameterTextureCount + textureOffset);\n                textureOffset += 1;\n                gl.bindTexture(gl.TEXTURE_2D, texture);\n            }\n\n            gl.drawArrays(gl.TRIANGLES, 0, 6);\n        });\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/DestinationNode/destinationnode.js\n **/","//Matthew Shotton, R&D User Experience,© BBC 2015\nimport ProcessingNode from \"./processingnode\";\nimport { createElementTexutre } from \"../utils.js\";\n\nexport default class EffectNode extends ProcessingNode{\n    /**\n    * Initialise an instance of an EffectNode. You should not instantiate this directly, but use VideoContest.createEffectNode().\n    */\n    constructor(gl, renderGraph, definition){\n        let placeholderTexture = createElementTexutre(gl);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array([0,0,0,0]));\n\n        super(gl, renderGraph, definition, definition.inputs, true);\n        \n        this._placeholderTexture = placeholderTexture;\n    }\n    \n    _render(){\n        let gl = this._gl;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this._framebuffer);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this._texture,0);\n        gl.clearColor(0, 0, 0, 0); // green;\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        super._render();\n\n        let inputs = this._renderGraph.getInputsForNode(this);\n        let textureOffset = 0;\n\n        for (var i = 0; i < this._inputTextureUnitMapping.length; i++) {\n            let inputTexture = this._placeholderTexture; \n            let textureUnit = this._inputTextureUnitMapping[i].textureUnit;\n            let textureName = this._inputTextureUnitMapping[i].name;\n            if (i < inputs.length && inputs[i] !== undefined){\n                inputTexture = inputs[i]._texture;\n            }\n\n            gl.activeTexture(textureUnit);\n            let textureLocation = gl.getUniformLocation(this._program, textureName);\n            gl.uniform1i(textureLocation, this._parameterTextureCount + textureOffset);\n            textureOffset += 1;\n            gl.bindTexture(gl.TEXTURE_2D, inputTexture);\n        }\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/ProcessingNodes/effectnode.js\n **/","//Matthew Shotton, R&D User Experience,© BBC 2015\nimport EffectNode from \"./effectnode\";\n\nexport default class TransitionNode extends EffectNode{\n    /**\n    * Initialise an instance of a TransitionNode. You should not instantiate this directly, but use VideoContest.createTransitonNode().\n    */\n    constructor(gl, renderGraph, definition){\n        super(gl, renderGraph, definition);\n        this._transitions = {};\n        \n        //save a version of the original property values\n        this._initialPropertyValues = {};\n        for (let propertyName in this._properties){\n            this._initialPropertyValues[propertyName] = this._properties[propertyName].value;\n        }\n    }\n\n    _doesTransitionFitOnTimeline(testTransition){\n        if (this._transitions[testTransition.property] === undefined) return true;\n        for (let transition of this._transitions[testTransition.property]) {\n            if (testTransition.start > transition.start && testTransition.start < transition.end)return false;\n            if (testTransition.end > transition.start && testTransition.end < transition.end)return false;\n            if(transition.start > testTransition.start && transition.start <  testTransition.end) return false;\n            if(transition.end > testTransition.start && transition.end <  testTransition.end) return false;\n        }\n        return true;\n    }\n\n    _insertTransitionInTimeline(transition){\n        if (this._transitions[transition.property] === undefined) this._transitions[transition.property] = [];\n        this._transitions[transition.property].push(transition);\n\n        this._transitions[transition.property].sort(function(a,b){\n            return a.start - b.start;\n        });\n    }\n\n    /**\n    * Create a transition on the timeline.\n    * \n    * @param {number} startTime - The time at which the transition should start (relative to currentTime of video context).\n    * @param {number} endTime - The time at which the transition should be completed by (relative to currentTime of video context).\n    * @param {number} currentValue - The value to start the transition at.\n    * @param {number} targetValue - The value to transition to by endTime.\n    * @param {String} propertyName - The name of the property to clear transitions on, if undefined default to \"mix\".\n    */\n    transition(startTime, endTime, currentValue, targetValue, propertyName=\"mix\"){\n        let transition = {start:startTime + this._currentTime, end:endTime + this._currentTime, current:currentValue, target:targetValue, property:propertyName};\n        if (!this._doesTransitionFitOnTimeline(transition))return false;\n        this._insertTransitionInTimeline(transition);\n        return true;\n    }\n\n    /**\n    * Clear all transistions on the passed property. If no property is defined clear all transitions on the node.\n    * \n    * @param {String} propertyName - The name of the property to clear transitions on, if undefined clear all transitions on the node.\n    */\n    clearTransitions(propertyName){\n        if (propertyName === undefined){\n            this._transitions = {};\n        }else{\n            this._transitions[propertyName] = [];\n        }\n    }\n    \n    /**\n    * Clear a transistion on the passed property that the specified time lies within.\n    * \n    * @param {String} propertyName - The name of the property to clear a transition on.\n    * @param {number} time - A time which lies within the property you're trying to clear.\n    */\n    clearTransition(propertyName, time){\n        let transitionIndex = undefined;\n        for (var i = 0; i < this._transitions[propertyName].length; i++) {\n            let transition = this._transitions[propertyName][i];\n            if (time > transition.start && time < transition.end){\n                transitionIndex = i;\n            }\n        }\n        if(transitionIndex !== undefined){\n            this._transitions[propertyName].splice(transitionIndex, 1);\n            return true;\n        }\n        return false;\n    }\n\n    _update(currentTime){\n        super._update(currentTime);\n        for (let propertyName in this._transitions){\n            let value = this[propertyName];\n            if (this._transitions[propertyName].length > 0){\n                value = this._transitions[propertyName][0].current;\n            }\n            let transitionActive = false;\n\n            for (var i = 0; i < this._transitions[propertyName].length; i++) {\n                let transition = this._transitions[propertyName][i];\n                if (currentTime > transition.end){\n                    value = transition.target;\n                    continue;\n                }\n\n                if (currentTime > transition.start && currentTime < transition.end){\n                    let difference = transition.target - transition.current;\n                    let progress = (this._currentTime - transition.start)/(transition.end - transition.start);\n                    transitionActive = true;\n                    this[propertyName] = transition.current + (difference * progress);\n                    break;\n                }\n            }\n\n            if(!transitionActive)this[propertyName] = value;\n        }\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/ProcessingNodes/transitionnode.js\n **/","//Matthew Shotton, R&D User Experience,© BBC 2015\nimport { ConnectException } from \"./exceptions.js\";\n\n\nexport default class RenderGraph {\n    /**\n    * Manages the rendering graph.\n    */\n    constructor(){\n        this.connections = [];\n    }\n\n    /**\n    * Get a list of nodes which are connected to the output of the passed node.\n    * \n    * @param {GraphNode} node - the node to get the outputs for.\n    * @return {GraphNode[]} An array of the nodes which are connected to the output.\n    */\n    getOutputsForNode(node){\n        let results = [];\n        this.connections.forEach(function(connection){\n            if (connection.source === node){\n                results.push(connection.destination);\n            }\n        });\n        return results;\n    }\n    \n    /**\n    * Get a list of nodes which are connected, by input name, to the given node. Array contains objects of the form: {\"source\":sourceNode, \"type\":\"name\", \"name\":inputName, \"destination\":destinationNode}.\n    *\n    * @param {GraphNode} node - the node to get the named inputs for.\n    * @return {Object[]} An array of objects representing the nodes and connection type, which are connected to the named inputs for the node.\n    */\n    getNamedInputsForNode(node){\n        let results = [];\n        this.connections.forEach(function(connection){\n            if (connection.destination === node && connection.type === \"name\"){\n                results.push(connection);\n            }\n        });\n        return results;\n    }\n\n    /**\n    * Get a list of nodes which are connected, by z-index name, to the given node. Array contains objects of the form: {\"source\":sourceNode, \"type\":\"zIndex\", \"zIndex\":0, \"destination\":destinationNode}.\n    * \n    * @param {GraphNode} node - the node to get the z-index refernced inputs for.\n    * @return {Object[]} An array of objects representing the nodes and connection type, which are connected by z-Index for the node.\n    */\n    getZIndexInputsForNode(node){\n        let results = [];\n        this.connections.forEach(function(connection){\n            if (connection.destination === node && connection.type === \"zIndex\"){\n                results.push(connection);\n            }\n        });\n        results.sort(function(a,b){\n            return a.zIndex - b.zIndex;\n        });\n        return results;   \n    }\n\n    /**\n    * Get a list of nodes which are connected as inputs to the given node. The length of the return array is always equal to the number of inputs for the node, with undefined taking the place of any inputs not connected.\n    * \n    * @param {GraphNode} node - the node to get the inputs for.\n    * @return {GraphNode[]} An array of GraphNodes which are connected to the node.\n    */\n    getInputsForNode(node){\n        let inputNames = node.inputNames;        \n        let results = [];\n        let namedInputs = this.getNamedInputsForNode(node);\n        let indexedInputs = this.getZIndexInputsForNode(node);\n\n        if(node._limitConnections === true){\n            for (let i = 0; i < inputNames.length; i++) {\n                results[i] = undefined;\n            }\n            \n            for(let connection of namedInputs){\n                let index = inputNames.indexOf(connection.name);\n                results[index] = connection.source;\n            }\n            let indexedInputsIndex = 0;\n            for (let i = 0; i < results.length; i++) {\n                if (results[i] === undefined && indexedInputs[indexedInputsIndex]!== undefined){\n                    results[i] = indexedInputs[indexedInputsIndex].source;\n                    indexedInputsIndex += 1;\n                }\n            }\n        }else{\n            for(let connection of namedInputs){\n                results.push(connection.source);\n            }\n            for(let connection of indexedInputs){\n                results.push(connection.source);\n            }\n        }\n        return results;\n    }\n\n    /**\n    * Check if a named input on a node is available to connect too.\n    * @param {GraphNode} node - the node to check.\n    * @param {String} inputName - the named input to check.\n    */\n    isInputAvailable(node, inputName){\n        if (node._inputNames.indexOf(inputName) === -1) return false;\n        for(let connection of this.connections){\n            if (connection.type === \"name\"){\n                if (connection.destination === node && connection.name === inputName){\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n    * Register a connection between two nodes.\n    * \n    * @param {GraphNode} sourceNode - the node to connect from.\n    * @param {GraphNode} destinationNode - the node to connect to.\n    * @param {(String | number)} [target] - the target port of the conenction, this could be a string to specfiy a specific named port, a number to specify a port by index, or undefined, in which case the next available port will be connected to.\n    * @return {boolean} Will return true if connection succeeds otherwise will throw a ConnectException.\n    */\n    registerConnection(sourceNode, destinationNode, target){\n        if (destinationNode.inputs.length >= destinationNode.inputNames.length && destinationNode._limitConnections === true){\n            throw new ConnectException(\"Node has reached max number of inputs, can't connect\");\n        }\n        if (typeof target === \"number\"){\n            //target is a specific\n            this.connections.push({\"source\":sourceNode, \"type\":\"zIndex\", \"zIndex\":target, \"destination\":destinationNode});\n        } else if (typeof target === \"string\" && destinationNode._limitConnections){\n            //target is a named port\n\n            //make sure named port is free\n            if (this.isInputAvailable(destinationNode, target)){\n                this.connections.push({\"source\":sourceNode, \"type\":\"name\", \"name\":target, \"destination\":destinationNode});\n            }else{\n                throw new ConnectException(\"Port \"+target+\" is already connected to\");\n            }\n\n        } else{\n            //target is undefined so just make it a high zIndex\n            let indexedConns = this.getZIndexInputsForNode(destinationNode);\n            let index = 0;\n            if (indexedConns.length > 0)index = indexedConns[indexedConns.length-1].zIndex +1;\n            this.connections.push({\"source\":sourceNode, \"type\":\"zIndex\", \"zIndex\":index, \"destination\":destinationNode});\n        }\n        return true;\n    }\n    \n    /**\n    * Remove a connection between two nodes.\n    * @param {GraphNode} sourceNode - the node to unregsiter connection from.\n    * @param {GraphNode} destinationNode - the node to register connection to.\n    * @return {boolean} Will return true if removing connection succeeds, or false if there was no connectionsction to remove.\n    */\n    unregisterConnection(sourceNode, destinationNode){\n        let toRemove = [];\n        \n        this.connections.forEach(function(connection){\n            if (connection.source === sourceNode && connection.destination === destinationNode){\n                toRemove.push(connection);\n            }\n        });\n\n        if (toRemove.length === 0) return false;\n\n        toRemove.forEach((removeNode) => {\n            let index = this.connections.indexOf(removeNode);\n            this.connections.splice(index, 1);\n        });\n\n        return true;\n    }\n\n    static outputEdgesFor(node, connections){\n        let results = [];\n        for(let conn of connections){\n            if (conn.source === node){\n                results.push(conn);\n            }\n        }\n        return results;\n    }\n\n    static inputEdgesFor(node, connections){\n        let results = [];\n        for(let conn of connections){\n            if (conn.destination === node){\n                results.push(conn);\n            }\n        }\n        return results;\n    }\n\n    static getInputlessNodes(connections){\n        let inputLess = [];\n        for (let conn of connections){\n            inputLess.push(conn.source);\n        }\n        for (let conn of connections){\n            let index = inputLess.indexOf(conn.destination);\n            if (index !== -1){\n                inputLess.splice(index, 1);\n            }\n        }\n        return inputLess;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/rendergraph.js\n **/"],"sourceRoot":""}